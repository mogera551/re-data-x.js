/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/AsyncProc/AsyncProc.js":
/*!************************************!*\
  !*** ./src/AsyncProc/AsyncProc.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AsyncProc)\n/* harmony export */ });\n/* harmony import */ var _AsyncProcData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncProcData.js */ \"./src/AsyncProc/AsyncProcData.js\");\n\r\n/**\r\n * 非同期処理クラス\r\n * キューに実行する非同期処理を登録し、execで非同期処理を実行する\r\n */\r\nclass AsyncProc {\r\n  /**\r\n   * @type {AsyncProcData[]}\r\n   */\r\n  queue = [];\r\n  \r\n  /**\r\n   * 非同期処理をキューへ登録\r\n   * @param {AsyncProcData} asyncProcData 登録する非同期処理\r\n   * @param {AsyncProcData[]?} [queue = this.queue] キュー\r\n   */\r\n  enqueue(asyncProcData, queue = this.queue) {\r\n    queue.push(asyncProcData);\r\n  }\r\n\r\n  /**\r\n   * 非同期処理の実行\r\n   * キューに滞留している非同期処理をすべて取得し実行する\r\n   * @param {AsyncProcData[]?} [queue = this.queue] queue キュー\r\n   * @async\r\n   */\r\n  async exec(queue = this.queue) {\r\n//    console.log(`exec() start`);\r\n    do {\r\n      const procs = queue.slice();\r\n      if (procs.length === 0) break;\r\n      queue.splice(0);\r\n      for(const proc of procs) {\r\n        await proc.exec();\r\n      }\r\n    } while(true);\r\n//    console.log(`exec() end`);\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/AsyncProc/AsyncProc.js?");

/***/ }),

/***/ "./src/AsyncProc/AsyncProcData.js":
/*!****************************************!*\
  !*** ./src/AsyncProc/AsyncProcData.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AsyncProcData)\n/* harmony export */ });\n/**\r\n * 非同期処理を実行するための情報\r\n */\r\nclass AsyncProcData {\r\n  /**\r\n   * 非同期関数\r\n   * @type {()=>{}} \r\n   */\r\n  target;\r\n  /**\r\n   * thisを指すオブジェクト\r\n   * @type {Object} \r\n   */\r\n  thisArg;\r\n  /**\r\n   * 引数配列\r\n   * @type {any[]} \r\n   */\r\n  args;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {()=>{}} target \r\n   * @param {Object} thisArg \r\n   * @param {any[]} args \r\n   */\r\n  constructor(target, thisArg, args) {\r\n    this.target = target;\r\n    this.thisArg = thisArg;\r\n    this.args = args;\r\n  }\r\n\r\n  async exec(target = this.target, thisArg = this.thisArg, args = this.args) {\r\n    return await Reflect.apply(target, thisArg, args);\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/AsyncProc/AsyncProcData.js?");

/***/ }),

/***/ "./src/BoundNode/Binder.js":
/*!*********************************!*\
  !*** ./src/BoundNode/Binder.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Binder)\n/* harmony export */ });\n/* harmony import */ var _NodeSelector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NodeSelector.js */ \"./src/BoundNode/NodeSelector.js\");\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _BoundTemplate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BoundTemplate.js */ \"./src/BoundNode/BoundTemplate.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n//const initializer = boundNode => boundNode.init();\r\nconst updator = (notifications, globalNotifications) => boundNode => boundNode.updateForNotify(notifications, globalNotifications);\r\n\r\n/**\r\n * @type {(boundNode:BoundNode)=>BoundTemplate}\r\n */\r\nconst toBoundTemplate = boundNode => (boundNode instanceof _BoundTemplate_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) ? boundNode : _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].raise(`${boundNode} is not BoundTemplate`);\r\n/**\r\n * コンポーネントがバインドしているノードを管理する。\r\n * バインドノードがTEMPLATEで、子ノードを展開する場合、TEMPLATE側で子ノードの管理を行う。\r\n */\r\nclass Binder {\r\n  /**\r\n   * バインドノードのリスト\r\n   * @type {BoundNode[]}\r\n   */\r\n  boundNodes = [];\r\n  /**\r\n   * @type {Component}\r\n   */\r\n  component;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Component} component \r\n   */\r\n  constructor(component) {\r\n    this.component = component;\r\n  }\r\n\r\n  /**\r\n   * バインドノードのリストに追加する\r\n   * @param {BoundNode} boundNode \r\n   */\r\n  add(boundNode) {\r\n    this.boundNodes.push(boundNode);\r\n  }\r\n\r\n  /**\r\n   * バインドするノードを取得し、バインドノードを生成し、リストに追加する\r\n   * @param {HTMLElement} documentRoot \r\n   */\r\n  bind(documentRoot) {\r\n    this.boundNodes.push(..._NodeSelector_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].select(this.component, documentRoot, this.component.template));\r\n  }\r\n\r\n  /**\r\n   * バインドノードのリストに対して、初期化を行う\r\n   */\r\n//  init() {\r\n//    this.boundNodes.forEach(initializer);\r\n//  }\r\n\r\n  /**\r\n   * バインドノードのリストに対して、更新処理を行う\r\n   * コンポーネントのViewModelの更新した内容をノードへ反映する\r\n   * @param {Set<NotifyData>} notifications\r\n   * @param {Set<NotifyData>} globalNotifications\r\n   */\r\n  updateForNotify(notifications, globalNotifications) {\r\n    this.boundNodes.forEach(updator(notifications, globalNotifications));\r\n  }\r\n\r\n  /**\r\n   * バインドノードのリストの巡回を行う\r\n   * @async\r\n   * @param {(boundNode:BoundNode)=>{}} callback\r\n   */\r\n  async walk(callback) {\r\n    /**\r\n     * \r\n     * @async\r\n     * @param {BoundNode[]} boundNodes \r\n     * @returns \r\n     */\r\n    const walk_ = async boundNodes => {\r\n      for(const boundNode of boundNodes) {\r\n        await callback(boundNode);\r\n        if (boundNode instanceof _BoundTemplate_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\r\n          const boundTemplate = toBoundTemplate(boundNode);\r\n          for(const loopChild of boundTemplate.loopChildren) {\r\n            await walk_(loopChild.boundNodes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    await walk_(this.boundNodes);\r\n  }\r\n  \r\n  /**\r\n   * ViewModelのプロパティ（setOfNames）をバインドしているBoundNodeをコールバックで返す\r\n   * @async\r\n   * @param {Set<string>} setOfNames \r\n   * @param {async(key:string, node:Node)=>{}} callback \r\n   */\r\n  async findNode(setOfNames, callback) {\r\n    await this.walk(async boundNode => {\r\n      const viewModelPaths = Array.from(boundNode.nodePropertiesByViewModelPath.keys());\r\n      for(const viewModelPath of viewModelPaths.filter(path => setOfNames.has(path))) {\r\n        await callback(viewModelPath, boundNode.node);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @type {Binder}\r\n   */\r\n  static rootBinder = new Binder(null);\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/Binder.js?");

/***/ }),

/***/ "./src/BoundNode/BoundComponent.js":
/*!*****************************************!*\
  !*** ./src/BoundNode/BoundComponent.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundComponent)\n/* harmony export */ });\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ViewModel/ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _Globals_Globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Globals/Globals.js */ \"./src/Globals/Globals.js\");\n/* harmony import */ var _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Thread/Thread.js */ \"./src/Thread/Thread.js\");\n/* harmony import */ var _ParseFunc_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ParseFunc.js */ \"./src/BoundNode/ParseFunc.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DEFAULT_PROPERTY = \"textContent\";\r\n\r\nclass BoundComponent extends _BoundNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\r\n  /**\r\n   * このノードをコンポーネントとして扱う\r\n   * @type {Component}\r\n   */\r\n  component;\r\n  \r\n  /**\r\n   * \r\n   * @param {Node} node \r\n   * @param {Component} parentComponent \r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  constructor(node, parentComponent, viewModelIndexes) {\r\n    super(node, parentComponent, viewModelIndexes);\r\n    this.component = (this.node instanceof _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__.Component) ? this.node : _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].raise(`node ${this.node} is not Component`);\r\n  }\r\n\r\n  /**\r\n   * バインド\r\n   */\r\n  bind(params = {}) {\r\n    const isDialog = (\"dialog\" in this.component.dataset);\r\n    const bindText = isDialog ? Object.keys(params).map(prop => `${prop}:${prop};`).join(\"\") : (this.component.dataset[\"bind\"] ?? \"\");\r\n    _ParseFunc_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].parseBinds(bindText, DEFAULT_PROPERTY).forEach(([propName, viewModelPropName, filters]) => {\r\n      const {viewModelProperty} = this.bindProperty(propName, viewModelPropName, filters);\r\n\r\n      if (isDialog) {\r\n        // ダイアログの場合、入力パラメータを参照\r\n        Object.defineProperty(this.component.viewModel, propName, {\r\n          get: () => Reflect.get(params, viewModelProperty.name),\r\n          set: value => Reflect.set(params, viewModelProperty.name, value),\r\n        });\r\n      } else if (this.viewModelProxy) {\r\n        // 親コンポーネントがある場合、親コンポーネントのプロパティを参照する\r\n        this.component.viewModelProxy.$addImportProp(propName); // キャッシュしないようにする\r\n        Object.defineProperty(this.component.viewModel, propName, {\r\n          get: () => _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getValue(this.viewModelProxy, viewModelProperty),\r\n          set: value => _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setValue(this.viewModelProxy, viewModelProperty, value),\r\n        });\r\n      } else {\r\n        // 親コンポーネントがない場合、グローバルのプロパティを参照する\r\n        Object.defineProperty(this.component.viewModel, propName, {\r\n          get: () => Reflect.get(_Globals_Globals_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], viewModelProperty.name),\r\n          set: value => Reflect.set(_Globals_Globals_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], viewModelProperty.name, value),\r\n        });\r\n      }\r\n      _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].current.notify(this.component, propName, []);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 変更通知をノードに値を反映\r\n   * @param {Set<NotifyData>} notifications\r\n   * @param {Set<NotifyData>} globalNotifications \r\n   */\r\n  updateForNotify(notifications, globalNotifications) {\r\n    for(const [viewModelPath, nodeProperties] of this.nodePropertiesByViewModelPath.entries()) {\r\n      if (notifications.has(viewModelPath) || globalNotifications.has(viewModelPath)) {\r\n        nodeProperties.forEach(nodeProperty => {\r\n          const { viewModelProperty, filters } = this.viewModelPropInfoByNodeProperty.get(nodeProperty);\r\n          // 更新通知を送る\r\n          _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].current.notify(this.component, nodeProperty.name, []);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/BoundComponent.js?");

/***/ }),

/***/ "./src/BoundNode/BoundElement.js":
/*!***************************************!*\
  !*** ./src/BoundNode/BoundElement.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundElement)\n/* harmony export */ });\n/* harmony import */ var _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Thread/Thread.js */ \"./src/Thread/Thread.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _NodeProperty_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NodeProperty.js */ \"./src/BoundNode/NodeProperty.js\");\n/* harmony import */ var _ParseFunc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ParseFunc.js */ \"./src/BoundNode/ParseFunc.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass BoundElement extends _BoundNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\r\n  /**\r\n   * このノードをHTMLElementとして扱う\r\n   * @type {HTMLElement}\r\n   */\r\n  element;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  defaultProperty;\r\n\r\n  /**\r\n   * \r\n   * @param {Node} node \r\n   * @param {Component} parentComponent \r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  constructor(node, parentComponent, viewModelIndexes) {\r\n    super(node, parentComponent, viewModelIndexes);\r\n    this.element = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toElement(this.node);\r\n    if (this.element instanceof HTMLSelectElement || this.element instanceof HTMLTextAreaElement || this.element instanceof HTMLOptionElement) {\r\n      this.defaultProperty = \"value\";\r\n    } else if (this.element instanceof HTMLInputElement) {\r\n      this.defaultProperty = (this.element.type === \"radio\" || this.element.type === \"checkbox\") ? \"checked\" : \"value\";\r\n    } else {\r\n      this.defaultProperty = \"textContent\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  bind() {\r\n    const bindText = this.element.dataset[\"bind\"] ?? \"\";\r\n    const isSetInputEvent  = _ParseFunc_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].parseBinds(bindText, this.defaultProperty).map(([propName, viewModelPropName, filters]) => {\r\n      if (propName.startsWith(\"on\")) {\r\n        this.bindEventHandler(propName, viewModelPropName);\r\n      } else {\r\n        const {nodeProperty, viewModelProperty} = this.bindProperty(propName, viewModelPropName, filters);\r\n        this.assignNodeValue(nodeProperty, viewModelProperty, filters);\r\n      }\r\n      return (propName === \"oninput\");\r\n    }).filter(v => v).length > 0;\r\n\r\n    // デフォルトイベントの設定\r\n    if (!isSetInputEvent && this.defaultProperty !== \"textContent\") {\r\n      const nodeProperty = _NodeProperty_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create(this.defaultProperty);\r\n      if (this.viewModelPropInfoByNodeProperty.has(nodeProperty)) {\r\n        this.element.addEventListener(\"input\", event => {\r\n          event.stopPropagation();\r\n          _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].current.asyncProc(() => {\r\n            const {viewModelProperty, filters} = this.viewModelPropInfoByNodeProperty.get(nodeProperty);\r\n            return Reflect.apply(nodeProperty.updateViewModelFunc, this, [this.node, nodeProperty, this.viewModelProxy, viewModelProperty, filters]);\r\n          }, this, []);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} propName \r\n   * @param {string} viewModelPropName \r\n   */\r\n  bindEventHandler(propName, viewModelPropName) {\r\n    const eventName = propName.slice(2); // \"onclick\" => \"click\"\r\n    this.element.addEventListener(eventName, event => {\r\n      event.stopPropagation();\r\n      _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].current.asyncProc(() => {\r\n        return this.parentComponent.stackIndexes.push(this.viewModelIndexes, () => {\r\n          return Reflect.apply(this.viewModelProxy[viewModelPropName], this.viewModelProxy, [ event, ...this.viewModelIndexes ]);\r\n        });\r\n      }, this, []);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/BoundElement.js?");

/***/ }),

/***/ "./src/BoundNode/BoundNode.js":
/*!************************************!*\
  !*** ./src/BoundNode/BoundNode.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundNode)\n/* harmony export */ });\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _Filter_FilterData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Filter/FilterData.js */ \"./src/Filter/FilterData.js\");\n/* harmony import */ var _Notify_NotifyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notify/NotifyData.js */ \"./src/Notify/NotifyData.js\");\n/* harmony import */ var _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ViewModel/ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n/* harmony import */ var _NodeProperty_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NodeProperty.js */ \"./src/BoundNode/NodeProperty.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../types.js */ \"./src/types.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_types_js__WEBPACK_IMPORTED_MODULE_5__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BoundNode {\r\n  /**\r\n   * インデックス配列\r\n   * @type {integer[]}\r\n   */\r\n  viewModelIndexes;\r\n  /**\r\n   * 親コンポーネント\r\n   * @type {Component}\r\n   */\r\n  parentComponent;\r\n  /**\r\n   * ノード\r\n   * @type {Node}\r\n   */\r\n  node;\r\n  /**\r\n   * ノードのプロパティとバインドしているViewModelのプロパティ\r\n   * @type {Map<NodeProperty,ViewModelPropertyInfo>}\r\n   */\r\n  viewModelPropInfoByNodeProperty = new Map;\r\n  /**\r\n   * ViewModelのパスとバインドしているノードのプロパティリスト\r\n   * @type {Map<string,NodeProperty[]>}\r\n   */\r\n  nodePropertiesByViewModelPath = new Map;\r\n\r\n  /**\r\n   * ViewModelProxy\r\n   * @return {ViewModelProxy?}\r\n   */\r\n  get viewModelProxy() {\r\n    return this.parentComponent?.viewModelProxy ?? null;\r\n  }\r\n\r\n  /**\r\n   * ViewModel\r\n   * @return {Object<string,any>}\r\n   */\r\n  get viewModel() {\r\n    return this.parentComponent?.viewModel ?? null;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Node} node \r\n   * @param {Component} parentComponent \r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  constructor(node, parentComponent, viewModelIndexes) {\r\n    this.node = node;\r\n    this.parentComponent = parentComponent;\r\n    this.viewModelIndexes = viewModelIndexes;\r\n  }\r\n\r\n  /**\r\n   * プロパティのバインド\r\n   * @param {string} nodePropName \r\n   * @param {string} viewModelPropName \r\n   * @param {FilterData[]} filters \r\n   * @return {{viewModelProperty:ActiveProperty,nodeProperty:NodeProperty,filters:FilterData[]}}\r\n   */\r\n  bindProperty(nodePropName, viewModelPropName, filters) {\r\n    const viewModelProperty = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create(viewModelPropName, this.viewModelIndexes);\r\n    const nodeProperty = _NodeProperty_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].create(nodePropName);\r\n\r\n    this.viewModelPropInfoByNodeProperty.set(nodeProperty, {viewModelProperty, filters});\r\n  \r\n    const [propsByPath, path] = [this.nodePropertiesByViewModelPath, viewModelProperty.path];\r\n    propsByPath.has(path) ? propsByPath.get(path).push(nodeProperty) : propsByPath.set(path, [nodeProperty]);\r\n\r\n    return {viewModelProperty, nodeProperty, filters};\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {NodeProperty} nodeProperty \r\n   * @param {ActiveProperty} viewModelProperty \r\n   * @param {FilterData[]} filters \r\n   */\r\n  assignNodeValue(nodeProperty, viewModelProperty, filters) {\r\n    // ノードに値を設定\r\n    return Reflect.apply(nodeProperty.updateNodeFunc, this, [this.viewModelProxy, viewModelProperty, this.node, nodeProperty, filters]);\r\n  }\r\n\r\n  /**\r\n   * バインド\r\n   */\r\n  bind() {\r\n  }\r\n\r\n  /**\r\n   * 変更通知をノードに値を反映\r\n   * @param {Set<NotifyData>} notifications\r\n   * @param {Set<NotifyData>} globalNotifications \r\n   */\r\n  updateForNotify(notifications, globalNotifications) {\r\n    for(const [viewModelPath, nodeProperties] of this.nodePropertiesByViewModelPath.entries()) {\r\n      if (notifications.has(viewModelPath) || globalNotifications.has(viewModelPath)) {\r\n        nodeProperties.forEach(nodeProperty => {\r\n          const { viewModelProperty, filters } = this.viewModelPropInfoByNodeProperty.get(nodeProperty);\r\n          // ノードに値を設定\r\n          return this.assignNodeValue(nodeProperty, viewModelProperty, filters);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * インデックス配列を変更する\r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  changeViewModelIndexes(viewModelIndexes) {\r\n    if (this.viewModelIndexes.toString() === viewModelIndexes.toString()) return;\r\n    this.viewModelIndexes = viewModelIndexes;\r\n    Array.from(this.viewModelPropInfoByNodeProperty.values()).forEach((info) => {\r\n      const lastViewModelProperty = info.viewModelProperty;\r\n      info.viewModelProperty = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create(info.viewModelProperty.name, viewModelIndexes);\r\n\r\n      const props = this.nodePropertiesByViewModelPath.get(lastViewModelProperty.path) ?? null;\r\n      if (props !== null) {\r\n        // 注意：this.viewModelPropInfoByNodeProperty.values()が同じものを返す場合があるので\r\n        //       その場合、propsがnullの場合がある\r\n        this.nodePropertiesByViewModelPath.delete(lastViewModelProperty.path);\r\n        this.nodePropertiesByViewModelPath.set(info.viewModelProperty.path, props);\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 前回の値を元に更新する\r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  reuseLastValue(viewModelIndexes) {\r\n    this.changeViewModelIndexes(viewModelIndexes);\r\n    for(const [viewModelPath, nodeProperties] of this.nodePropertiesByViewModelPath.entries()) {\r\n      nodeProperties == null && console.log(this, this.nodePropertiesByViewModelPath);\r\n      nodeProperties.forEach(nodeProperty => {\r\n        const { viewModelProperty, filters } = this.viewModelPropInfoByNodeProperty.get(nodeProperty);\r\n        this.assignNodeValue(nodeProperty, viewModelProperty, filters);\r\n      });\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/BoundNode.js?");

/***/ }),

/***/ "./src/BoundNode/BoundTemplate.js":
/*!****************************************!*\
  !*** ./src/BoundNode/BoundTemplate.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundTemplate)\n/* harmony export */ });\n/* harmony import */ var _Notify_NotifyData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Notify/NotifyData.js */ \"./src/Notify/NotifyData.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ViewModel/ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n/* harmony import */ var _NodeSelector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NodeSelector.js */ \"./src/BoundNode/NodeSelector.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 親要素をクローンして入れ替えて、子要素を再展開して、最後に元に戻す\r\n * @param {Element} element \r\n * @param {()=>{}} callback \r\n */\r\nfunction offlineRender(element, callback) {\r\n  const parentElement = element.parentElement;\r\n  if (parentElement) {\r\n    const clone = parentElement.cloneNode();\r\n    parentElement.replaceWith(clone);\r\n    try {\r\n      callback();\r\n    } finally {\r\n      clone.replaceWith(parentElement);\r\n    }\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\n/**\r\n * TEMPLATEでループを展開した子ノードの情報\r\n */\r\nclass LoopChild {\r\n  /**\r\n   * 生成したトップノードのリスト\r\n   * @type {Node[]}\r\n   */\r\n  nodes = [];\r\n  /**\r\n   * 対応するViewModelのプロパティ値\r\n   * @type {any}\r\n   */\r\n  value;\r\n  /**\r\n   * バインドノードのリスト\r\n   * @type {BoundNode[]}\r\n   */\r\n  boundNodes = [];\r\n  /**\r\n   * @type {DocumentFragment}\r\n   */\r\n  root;\r\n  /**\r\n   * @type {integer}\r\n   */\r\n  key;\r\n\r\n  /**\r\n   * 親ノードからノードを削除\r\n   */\r\n  removeNodes() {\r\n    this.nodes.forEach(node => node.parentNode && node.parentNode.removeChild(node));\r\n    //this.nodes.splice(0);\r\n  }\r\n  \r\n  /**\r\n   * バインドノードのリストに対して、更新処理を行う\r\n   * 更新処理は、コンポーネントのViewModelの更新した内容をノードへ反映する\r\n   * @param {Set<NotifyData>} notifications \r\n   * @param {Set<NotifyData>} globalNotifications \r\n   */\r\n  updateForNotify(notifications, globalNotifications) {\r\n    this.boundNodes.forEach(boundNode => boundNode.updateForNotify(notifications, globalNotifications));\r\n  }\r\n\r\n}\r\n\r\nclass BoundTemplate extends _BoundNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\r\n  /**\r\n   * @type {HTMLTemplateElement}\r\n   */\r\n  template;\r\n  /**\r\n   * \r\n   * @param {Node} node \r\n   * @param {Component} parentComponent \r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  constructor(node, parentComponent, viewModelIndexes) {\r\n    super(node, parentComponent, viewModelIndexes);\r\n    this.template = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toTemplate(this.node);\r\n  }\r\n\r\n  /**\r\n   * @type {ActiveProperty}\r\n   */\r\n  viewModelProperty;\r\n\r\n  /**\r\n   * @type {LoopChild[]}\r\n   */\r\n  loopChildren = [];\r\n\r\n  /**\r\n   * ループの展開\r\n   * @param {any} loopValue\r\n   * @param {Map<any,LoopChild[]>} loopChildsByLastValue 前の状態\r\n   */\r\n  expandLoop(loopValue, loopChildsByLastValue = new Map()) {\r\n    this.loopChildren.push(...Object.entries(loopValue).map(([key, value]) => {\r\n      let child;\r\n      const newIndexes = this.viewModelProperty.definedProp.level === 0 ? [key] : this.viewModelProperty.indexes.concat(key);\r\n      if (loopChildsByLastValue.has(value)) {\r\n        // 前回の値を再利用\r\n        const childs = loopChildsByLastValue.get(value);\r\n        child = childs.shift();\r\n        child.root = document.createDocumentFragment();\r\n        child.nodes.forEach(node => child.root.appendChild(node));\r\n        childs.length === 0 && loopChildsByLastValue.delete(value);\r\n        child.boundNodes.forEach(boundNode => boundNode.reuseLastValue(newIndexes));\r\n        child.key = key;\r\n      } else {\r\n        child = new LoopChild;\r\n        child.root = document.importNode(this.template.content, true); // See http://var.blog.jp/archives/76177033.html\r\n        child.boundNodes = _NodeSelector_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].select(this.parentComponent, child.root, this.template, newIndexes);\r\n        child.nodes = Array.from(child.root.childNodes);\r\n        child.key = key;\r\n        child.value = value;\r\n      }\r\n      return child;\r\n    }));\r\n\r\n    const fragment = document.createDocumentFragment();\r\n    this.loopChildren.forEach(loopChild => fragment.appendChild(loopChild.root));\r\n    this.template.after(fragment);\r\n  }\r\n\r\n  /**\r\n   * ループの再展開\r\n   */\r\n  reexpandLoop() {\r\n    const loopValue = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getValue(this.viewModelProxy, this.viewModelProperty);\r\n    // 前回の値を取得\r\n    /**\r\n     * @type {Map<any,LoopChild[]>}\r\n     */\r\n    const loopChildsByLastValue = new Map();\r\n    if (loopValue.length > 0) {\r\n      this.loopChildren.forEach(loopChild => \r\n        loopChildsByLastValue.has(loopChild.value) ? loopChildsByLastValue.get(loopChild.value).push(loopChild) : loopChildsByLastValue.set(loopChild.value, [loopChild])\r\n      );\r\n    }\r\n\r\n    this.loopChildren.forEach(loopChild => loopChild.removeNodes());\r\n    this.loopChildren = [];\r\n    this.expandLoop(loopValue, loopChildsByLastValue);\r\n  }\r\n\r\n  /**\r\n   * \r\n   */\r\n  bind() {\r\n    const bindText = this.template.dataset[\"bind\"] ?? \"\";\r\n    this.viewModelProperty = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create(bindText, this.viewModelIndexes);\r\n    const loopValue = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getValue(this.viewModelProxy, this.viewModelProperty);\r\n    offlineRender(this.template, () => {\r\n      this.expandLoop(loopValue);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Set<NotifyData>} notifications\r\n   * @param {Set<NotifyData>} globalNotifications \r\n   */\r\n  updateForNotify(notifications, globalNotifications) {\r\n    if (notifications.has(this.viewModelProperty.path)) {\r\n      offlineRender(this.template, () => {\r\n        this.reexpandLoop();\r\n      });\r\n    } else {\r\n      this.loopChildren.forEach(loopChild => loopChild.updateForNotify(notifications, globalNotifications));      \r\n    }\r\n  }\r\n\r\n  /**\r\n   * 前回の値を元に更新する\r\n   * @param {integer[]} viewModelIndexes \r\n   */\r\n  reuseLastValue(viewModelIndexes) {\r\n    this.changeViewModelIndexes(viewModelIndexes);\r\n    offlineRender(this.template, () => {\r\n      this.reexpandLoop();\r\n    });\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/BoundTemplate.js?");

/***/ }),

/***/ "./src/BoundNode/BoundText.js":
/*!************************************!*\
  !*** ./src/BoundNode/BoundText.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundText)\n/* harmony export */ });\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _ParseFunc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ParseFunc.js */ \"./src/BoundNode/ParseFunc.js\");\n\r\n\r\n\r\nconst DEFAULT_PROPERTY = \"textContent\";\r\n\r\nclass BoundText extends _BoundNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * バインド\r\n   */\r\n  bind() {\r\n    // コメントノードをテキストノードに入れ替える\r\n    // this.nodeを入れ替えるので注意\r\n    const commentNode = this.node;\r\n    const bindText = commentNode.textContent.slice(2);\r\n    this.node = document.createTextNode(\"\");\r\n    commentNode.parentNode.replaceChild(this.node, commentNode);\r\n\r\n    _ParseFunc_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parseBinds(bindText ?? \"\", DEFAULT_PROPERTY).forEach(([propName, viewModelPropName, filters]) => {\r\n      const {nodeProperty, viewModelProperty} = this.bindProperty(propName, viewModelPropName, filters);\r\n      this.assignNodeValue(nodeProperty, viewModelProperty, filters);\r\n    });\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/BoundText.js?");

/***/ }),

/***/ "./src/BoundNode/Factory.js":
/*!**********************************!*\
  !*** ./src/BoundNode/Factory.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Factory)\n/* harmony export */ });\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _BoundComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BoundComponent.js */ \"./src/BoundNode/BoundComponent.js\");\n/* harmony import */ var _BoundElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./BoundElement.js */ \"./src/BoundNode/BoundElement.js\");\n/* harmony import */ var _BoundText_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BoundText.js */ \"./src/BoundNode/BoundText.js\");\n/* harmony import */ var _BoundTemplate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BoundTemplate.js */ \"./src/BoundNode/BoundTemplate.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Factory {\r\n  /**\r\n   * \r\n   * @param {Component} parentComponent\r\n   * @param {Node} node \r\n   * @param {integer[]} indexes \r\n   * @returns {BoundNode[]}\r\n   */\r\n  static create(parentComponent, node, indexes) {\r\n    if (node instanceof _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__.Component) {\r\n      return new _BoundComponent_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](node, parentComponent, indexes);\r\n    } else if (node instanceof HTMLTemplateElement) {\r\n      return new _BoundTemplate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](node, parentComponent, indexes);\r\n    } else if (node instanceof HTMLElement) {\r\n      return new _BoundElement_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](node, parentComponent, indexes);\r\n    } else if (node instanceof Comment) {\r\n      return new _BoundText_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](node, parentComponent, indexes);\r\n    } else {\r\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].raise(`unknown node ${node}`);\r\n    }\r\n  };\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/Factory.js?");

/***/ }),

/***/ "./src/BoundNode/FileReaderEx.js":
/*!***************************************!*\
  !*** ./src/BoundNode/FileReaderEx.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileReaderEx)\n/* harmony export */ });\nclass FileReaderEx extends FileReader{\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n  #readAs(blob, ctx){\r\n    return new Promise((resolve, reject)=>{\r\n      super.addEventListener(\"load\", ({target}) => resolve(target.result));\r\n      super.addEventListener(\"error\", ({target}) => reject(target.error));\r\n      super[ctx](blob);\r\n    });\r\n  }\r\n\r\n  readAsArrayBuffer(blob){\r\n    return this.#readAs(blob, \"readAsArrayBuffer\");\r\n  }\r\n\r\n  readAsDataURL(blob){\r\n    return this.#readAs(blob, \"readAsDataURL\");\r\n  }\r\n\r\n  readAsText(blob){\r\n    return this.#readAs(blob, \"readAsText\");\r\n  }\r\n  \r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/FileReaderEx.js?");

/***/ }),

/***/ "./src/BoundNode/NodeProperty.js":
/*!***************************************!*\
  !*** ./src/BoundNode/NodeProperty.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NodeProperty)\n/* harmony export */ });\n/* harmony import */ var _UpdateFunc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UpdateFunc.js */ \"./src/BoundNode/UpdateFunc.js\");\n\r\n\r\nclass NodeProperty {\r\n  name;\r\n  paths;\r\n  updateViewModelFunc;\r\n  updateNodeFunc;\r\n  /**\r\n   * ノードのプロパティについて、パス要素、ViewModel・ノード更新関数を取得\r\n   * @param {string} name \r\n   */\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.paths = name.split(\".\");\r\n    const [updateViewModelFunc, updateNodeFunc] = (this.paths.length === 2 && this.paths[0] === \"class\") ? _UpdateFunc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].className :\r\n      (name === \"radio\" || name === \"checkbox\" || name === \"file\") ? _UpdateFunc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][name] : \r\n      (this.paths.length === 1 || this.paths.length === 2) ? _UpdateFunc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"param\" + this.paths.length] : console.error(`unknown property name ${name}`);\r\n    Object.assign(this, {updateViewModelFunc, updateNodeFunc});\r\n  }\r\n\r\n  /**\r\n   * @type {Map<string,NodeProperty>}\r\n   */\r\n  static cacheNodePropertyByName = new Map();\r\n  /**\r\n   * \r\n   * @param {string} name \r\n   * @returns {NodeProperty}\r\n   */\r\n  static create(name) {\r\n    let nodeProperty;\r\n    if (this.cacheNodePropertyByName.has(name)) {\r\n      nodeProperty = this.cacheNodePropertyByName.get(name);\r\n    } else {\r\n      nodeProperty = new NodeProperty(name);\r\n      this.cacheNodePropertyByName.set(name, nodeProperty);\r\n    }\r\n    return nodeProperty;\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/NodeProperty.js?");

/***/ }),

/***/ "./src/BoundNode/NodeSelector.js":
/*!***************************************!*\
  !*** ./src/BoundNode/NodeSelector.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NodeSelector)\n/* harmony export */ });\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _BoundNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n/* harmony import */ var _Factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Factory.js */ \"./src/BoundNode/Factory.js\");\n\r\n\r\n\r\nconst SELECTOR = \"[data-bind]\";\r\n\r\n/**\r\n * ルートノードから、nodeまでのchileNodesのインデックスリストを取得する\r\n * ex.\r\n * rootNode.childNodes[1].childNodes[3].childNodes[7].childNodes[2]\r\n * => [1,3,7,2]\r\n * @param {Node} node \r\n * @returns {integer[]}\r\n */\r\nconst getNodeRoute = node => {\r\n  const routeIndexes = [];\r\n  while(node.parentNode != null) {\r\n    routeIndexes.unshift(Array.from(node.parentNode.childNodes).indexOf(node));\r\n    node = node.parentNode;\r\n  }\r\n  return routeIndexes;\r\n};\r\n\r\nclass NodeSelector {\r\n  /**\r\n   * @type {Map<HTMLTemplateElement, integer[][]>}\r\n   */\r\n  static listOfRouteIndexesByTemplate = new Map();\r\n  /**\r\n   * テンプレートのコピーからバインドするノードを取得する\r\n   * data-bind属性を持つ要素を取得し、そのバインドノードを作成し、data-bind属性をパースする\r\n   * <!--@@param-->を持つコメントノードを取得し、そのバインドノードを作成し、パースする\r\n   * テンプレートに対するキャッシュを保持する\r\n   * そのあとバインドノードに対してbind()を実行する\r\n   * @param {Component} parentComponent \r\n   * @param {HTMLElement} documentRoot パースを開始する要素 \r\n   * @param {HTMLTemplateElement} template テンプレート\r\n   * @param {integer[]} indexes ループインデックス\r\n   * @returns {BoundNode[]} BoundNodeの配列を返す\r\n   */\r\n  static select(parentComponent, documentRoot, template, indexes = []) {\r\n    /**\r\n     * @type {BoundNode[]}\r\n     */\r\n    const boundNodes = [];\r\n\r\n    if (this.listOfRouteIndexesByTemplate.has(template)) {\r\n      // キャッシュがある場合\r\n      // querySelectorAllをせずにNodeの位置を特定できる\r\n      const listOfRouteIndexes = this.listOfRouteIndexesByTemplate.get(template);\r\n      const nodes = listOfRouteIndexes.map(routeIndexes => routeIndexes.reduce((node, routeIndex) => node.childNodes[routeIndex], documentRoot));\r\n\r\n      // BoundNodeを作成する\r\n      boundNodes.push(...nodes.map(node => _Factory_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create(parentComponent, node, indexes)));\r\n    } else {\r\n      /**\r\n       * @type {Node[]}\r\n       */\r\n      const nodes = [];\r\n      /**\r\n       * @type {integer[][]}\r\n       */\r\n      const listOfRouteIndexes = [];\r\n\r\n      /**\r\n       * @type {HTMLElement[]}\r\n       */\r\n      const elements = Array.from(documentRoot.querySelectorAll(SELECTOR));\r\n      // ルートから、nodeのインデックスの順番をキャッシュに覚えておく\r\n      listOfRouteIndexes.push(...elements.map(element => getNodeRoute(element)));\r\n\r\n      /**\r\n       * @type {Comment[]}\r\n       */\r\n      const commentNodes = [];\r\n      const walk_ = (node) => node.childNodes.forEach(node => {\r\n        node instanceof Comment && node.textContent[0] === \"@\" && node.textContent[1] === \"@\" && commentNodes.push(node);\r\n        walk_(node);\r\n      });\r\n      walk_(documentRoot);\r\n      listOfRouteIndexes.push(...commentNodes.map(node => getNodeRoute(node)));\r\n  \r\n      this.listOfRouteIndexesByTemplate.set(template, listOfRouteIndexes);\r\n      nodes.push(...elements);\r\n      nodes.push(...commentNodes);\r\n  \r\n      // BoundNodeを作成する\r\n      boundNodes.push(...nodes.map(node => _Factory_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create(parentComponent, node, indexes)));\r\n    }\r\n    // バインドノードに対してbind()を実行する\r\n    boundNodes.forEach(node => node.bind());\r\n    return boundNodes;\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/NodeSelector.js?");

/***/ }),

/***/ "./src/BoundNode/ParseFunc.js":
/*!************************************!*\
  !*** ./src/BoundNode/ParseFunc.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Filter_FilterData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Filter/FilterData.js */ \"./src/Filter/FilterData.js\");\n\r\n\r\nconst SAMENAME = \"@\";\r\nconst DEFAULT = \"$\";\r\n\r\n/**\r\n * data-bind属性をパースする関数群\r\n */\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n  /**\r\n   * @type {Map<string,Array>}\r\n   */\r\n  static cache = new Map();\r\n  /**\r\n   * トリム関数\r\n   * @param {string} s \r\n   * @returns {string}\r\n   */\r\n  static trim = s => s.trim();\r\n  /**\r\n   * 長さチェック関数\r\n   * @param {string} s \r\n   * @returns {string}\r\n   */\r\n  static has = s => s.length > 0;\r\n  /**\r\n   * フィルターのパース\r\n   * \"eq,100|falsey\" ---> [FilterData(eq, [100]), FilterData(falsey)]\r\n   * @param {string} text \r\n   * @returns {FilterData[]}\r\n   */\r\n  static parseFilter = text => {\r\n    const [name, ...options] = text.split(\",\").map(this.trim);\r\n    return Object.assign(new _Filter_FilterData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {name, options});\r\n  }\r\n  /**\r\n   * ViewModelプロパティのパース\r\n   * \"value|eq,100|falsey\" ---> [\"value\", FilterData[]]\r\n   * @param {string} text \r\n   * @returns {[viewModelProp:string,FilterData[]]}\r\n   */\r\n  static parseViewModelProp = text => {\r\n    const [viewModelProp, ...filterTexts] = text.split(\"|\").map(this.trim);\r\n    return [viewModelProp, filterTexts.map(text => this.parseFilter(text))];\r\n  }\r\n  /**\r\n   * 式のパース\r\n   * \"textContent:value|eq,100|falsey\" ---> [\"textContent\", \"value\", FilterData[eq, falsey]]\r\n   * @param {string} expr \r\n   * @param {string} defaultName \r\n   * @returns {[prop:string,viewModelProp:string,filters:FilterData[]]}\r\n   */\r\n  static parseBind = (expr, defaultName) => {\r\n    const [prop, viewModelPropText] = [defaultName].concat(...expr.split(\":\").map(this.trim)).splice(-2);\r\n    const [viewModelProp, filters] = this.parseViewModelProp(viewModelPropText);\r\n    return [prop, viewModelProp, filters];\r\n  }\r\n  /**\r\n   * 属性値のパース\r\n   * @param {string} text 属性値\r\n   * @param {string} defaultName prop:を省略時、デフォルトのプロパティ値\r\n   * @returns {[prop:string,viewModelProp:string,filters:FilterData[]][]}\r\n   */\r\n  static parseBinds = (text, defaultName) => {\r\n    const key = `${text}\\t${defaultName}`;\r\n    if (this.cache.has(key)) {\r\n      return this.cache.get(key);\r\n    } else {\r\n      const binds = text.split(\";\").map(this.trim).filter(this.has).map(s => this.parseBind(s, DEFAULT))\r\n      .map(([prop, viewModelProp, filters]) => {\r\n        viewModelProp = viewModelProp === SAMENAME ? prop : viewModelProp;\r\n        prop = prop === DEFAULT ? defaultName : prop;\r\n        return [prop, viewModelProp, filters];\r\n      });\r\n      this.cache.set(key, binds);\r\n      return binds;\r\n    }\r\n\r\n  };\r\n});\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/ParseFunc.js?");

/***/ }),

/***/ "./src/BoundNode/UpdateFunc.js":
/*!*************************************!*\
  !*** ./src/BoundNode/UpdateFunc.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _CheckPoint_CheckPoint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CheckPoint/CheckPoint.js */ \"./src/CheckPoint/CheckPoint.js\");\n/* harmony import */ var _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Filter/Filter.js */ \"./src/Filter/Filter.js\");\n/* harmony import */ var _Filter_FilterData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Filter/FilterData.js */ \"./src/Filter/FilterData.js\");\n/* harmony import */ var _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Thread/Thread.js */ \"./src/Thread/Thread.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ViewModel/ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n/* harmony import */ var _FileReaderEx_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FileReaderEx.js */ \"./src/BoundNode/FileReaderEx.js\");\n/* harmony import */ var _NodeProperty_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./NodeProperty.js */ \"./src/BoundNode/NodeProperty.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../types.js */ \"./src/types.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_types_js__WEBPACK_IMPORTED_MODULE_8__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UpdateViewModel {\r\n  /**\r\n   * ノードプロパティが１階層の場合のViewModel更新処理\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static param1(node, nodeProp, viewModel, viewModelProp, filters) {\r\n    _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setValue(viewModel, viewModelProp, _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForInput(node[nodeProp.name], filters));\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティが２階層の場合のViewModel更新処理\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static param2(node, nodeProp, viewModel, viewModelProp, filters) {\r\n    _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setValue(viewModel, viewModelProp, _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForInput(node[nodeProp.paths[0]][nodeProp.paths[1]], filters));\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがクラス指定の場合のViewModel更新処理\r\n   * DOM側から更新されることはないので、何もしない\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static className(node, nodeProp, viewModel, viewModelProp, filters) {\r\n    //\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがラジオの場合のViewModel更新処理\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static radio(node, nodeProp, viewModel, viewModelProp, filters) {\r\n    const element = _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toElement(node);\r\n    element.checked && _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setValue(viewModel, viewModelProp, _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForInput(element.value, filters));\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがチェックボックスの場合のViewModel更新処理\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static checkbox(node, nodeProp, viewModel, viewModelProp, filters) {\r\n    const element = _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toElement(node);\r\n    const values = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getValue(viewModel, viewModelProp);\r\n    const value = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForInput(element.value, filters);\r\n    if (element.checked) {\r\n      values.push(value);\r\n    } else {\r\n      const index = values.findIndex(v => v == value);\r\n      (index >= 0) && values.splice(index, 1);\r\n    } \r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがファイルの場合のViewModel更新処理\r\n   * @async\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static async file(node, nodeProp, viewModel, viewModelProp, filters) {\r\n    const input = _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toInput(node);\r\n    if (input.files.length == 0) return;\r\n    const reader = new _FileReaderEx_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\r\n    const data = await reader.readAsText(input.files[0]);\r\n    const value = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForInput(data, filters);\r\n    _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].setValue(viewModel, viewModelProp, value);\r\n  }\r\n\r\n}\r\n\r\nclass UpdateNode {\r\n  /**\r\n   * ノードプロパティが１階層の場合のノード更新処理\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static param1(viewModel, viewModelProp, node, nodeProp, filters) {\r\n    const result = _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getValue(viewModel, viewModelProp);\r\n    const value = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForOutput(result, filters);\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].current.updateNode(node, [nodeProp], () => {\r\n      node[nodeProp.name] = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティが２階層の場合のノード更新処理\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static param2(viewModel, viewModelProp, node, nodeProp, filters) {\r\n    const value = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForOutput(_ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getValue(viewModel, viewModelProp), filters);\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].current.updateNode(node, nodeProp.paths, () => {\r\n      node[nodeProp.paths[0]][nodeProp.paths[1]] = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがクラス指定の場合のノード更新処理\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static className(viewModel, viewModelProp, node, nodeProp, filters) {\r\n    const element = _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toElement(node);\r\n    const value = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForOutput(_ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getValue(viewModel, viewModelProp), filters);\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].current.updateNode(node, [\"classList\"], () => {\r\n      value ? element.classList.add(nodeProp.paths[1]) : element.classList.remove(nodeProp.paths[1]);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがラジオの場合のノード更新処理\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static radio(viewModel, viewModelProp, node, nodeProp, filters) {\r\n    const element = _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toElement(node);\r\n    const value = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForOutput(_ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getValue(viewModel, viewModelProp), filters);\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].current.updateNode(node, [\"checked\"], () => {\r\n      element.checked = element.value == value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがチェックボックスの場合のノード更新処理\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static checkbox(viewModel, viewModelProp, node, nodeProp, filters) {\r\n    const element = _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].toElement(node);\r\n    const values = _Filter_Filter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyForOutput(_ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getValue(viewModel, viewModelProp), filters);\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].current.updateNode(node, [\"checked\"], () => {\r\n      element.checked = values.find(value => value == element.value) ? true : false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ノードプロパティがファイルの場合のノード更新処理\r\n   * @param {ViewModelProxy} viewModel ViewModel\r\n   * @param {ActiveProperty} viewModelProp ViewModelのプロパティ\r\n   * @param {Node} node ノード\r\n   * @param {NodeProperty} nodeProp ノードのプロパティ\r\n   * @param {FilterData[]} filters フィルターのリスト\r\n   */\r\n  static file(viewModel, viewModelProp, node, nodeProp, filters) {\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * @type {Object<string,[UpdateViewModelFunc, UpdateNodeFunc]>}\r\n */\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n  \"param1\" : [UpdateViewModel.param1, UpdateNode.param1],\r\n  \"param2\" : [UpdateViewModel.param2, UpdateNode.param2],\r\n  \"className\" : [UpdateViewModel.className, UpdateNode.className],\r\n  \"radio\" : [UpdateViewModel.radio, UpdateNode.radio],\r\n  \"checkbox\" : [UpdateViewModel.checkbox, UpdateNode.checkbox],\r\n  \"file\" : [UpdateViewModel.file, UpdateNode.file],\r\n});\n\n//# sourceURL=webpack://re-data-x/./src/BoundNode/UpdateFunc.js?");

/***/ }),

/***/ "./src/CheckPoint/CheckPoint.js":
/*!**************************************!*\
  !*** ./src/CheckPoint/CheckPoint.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CheckPoint)\n/* harmony export */ });\nclass CheckPoint {\r\n  point = 0;\r\n  last = 0;\r\n  name;\r\n  results = 0;\r\n\r\n  constructor(name, results) {\r\n    this.name = name;\r\n    this.point = 0;\r\n    this.last = performance.now();\r\n    this.results = results;\r\n  }\r\n  check() {\r\n    this.point++;\r\n    const now = performance.now();\r\n    const duration = now - this.last;\r\n    if (!this.results.has(this.point)) {\r\n      this.results.set(this.point, duration);\r\n    } else {\r\n      this.results.set(this.point, this.results.get(this.point) + duration);\r\n    }\r\n    this.last = now;\r\n  }\r\n\r\n  static resultsByName = new Map();\r\n  static create(name) {\r\n    let results = this.resultsByName.get(name);\r\n    if (results == null) {\r\n      results = new Map();\r\n      this.resultsByName.set(name, results);\r\n    }\r\n    return new CheckPoint(name, results);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://re-data-x/./src/CheckPoint/CheckPoint.js?");

/***/ }),

/***/ "./src/Component/BaseComponent.js":
/*!****************************************!*\
  !*** ./src/Component/BaseComponent.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BaseComponent)\n/* harmony export */ });\n/* harmony import */ var _ViewModel_Proxy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ViewModel/Proxy.js */ \"./src/ViewModel/Proxy.js\");\n/* harmony import */ var _View_View_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../View/View.js */ \"./src/View/View.js\");\n/* harmony import */ var _View_DialogView_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../View/DialogView.js */ \"./src/View/DialogView.js\");\n/* harmony import */ var _BoundNode_Binder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../BoundNode/Binder.js */ \"./src/BoundNode/Binder.js\");\n/* harmony import */ var _Stack_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Stack.js */ \"./src/Component/Stack.js\");\n/* harmony import */ var _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Thread/Thread.js */ \"./src/Thread/Thread.js\");\n/* harmony import */ var _ViewModel_ActiveProperty_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ViewModel/ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n/* harmony import */ var _ViewModel_ActiveProperties_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ViewModel/ActiveProperties.js */ \"./src/ViewModel/ActiveProperties.js\");\n/* harmony import */ var _BoundNode_BoundComponent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../BoundNode/BoundComponent.js */ \"./src/BoundNode/BoundComponent.js\");\n/* harmony import */ var _BoundNode_BoundNode_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../BoundNode/BoundNode.js */ \"./src/BoundNode/BoundNode.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Componentのベース、HTMLElementを拡張します。\r\n * 以下の機能を付加する。\r\n * シャドウルート、View、ViewModel、ViewModelProxyを生成する。\r\n * binder、stackを生成する。\r\n * connectedCallback時、\r\n * 親コンポーネントの初期化完了後、\r\n * ViewModelの初期化を行い、Viewのレンダリングを実行する。\r\n */\r\nclass BaseComponent extends HTMLElement {\r\n  /**\r\n   * @type {BaseComponent}\r\n   */\r\n  #parentComponent;\r\n  /**\r\n   * @type {Promise}\r\n   */\r\n  #initializePromise;\r\n  /**\r\n   * @type {function}\r\n   */\r\n  #initializeResolve;\r\n  /**\r\n   * @type {function}\r\n   */\r\n  #initializeReject;\r\n  #isInitializing;\r\n \r\n  #resolveForDialog;\r\n  #rejectForDialog;\r\n  #componentForDialog;\r\n  #paramsForDialog;\r\n\r\n  /**\r\n   * @type {HTMLTemplateElement}\r\n   */\r\n  template;\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  viewModel;\r\n  /**\r\n   * @type {Proxy}\r\n   */\r\n  viewModelProxy;\r\n  /**\r\n   * @type {View}\r\n   */\r\n  view;\r\n  /**\r\n   * @type {Binder}\r\n   */\r\n  binder;\r\n  /**\r\n   * @type {integer[]}\r\n   */\r\n  stackIndexes;\r\n \r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.#isInitializing = true;\r\n    this.#initializePromise = new Promise((resolve, reject) => {\r\n      this.#initializeResolve = resolve;\r\n      this.#initializeReject = reject;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Viewオブジェクトの生成\r\n   * @returns {View}\r\n   */\r\n  createView() {\r\n    return (\"dialog\" in this.dataset) ? new _View_DialogView_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this) : new _View_View_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\r\n  }\r\n\r\n  /**\r\n   * 構築\r\n   * shadowルートの作成\r\n   * 各種オブジェクト生成\r\n   * ViewModelProxyの生成\r\n   * @param {ComponentData} componentData \r\n   */\r\n  build(componentData) {\r\n    this.withoutShadowRoot || this.attachShadow({mode: 'open'});\r\n    this.template = componentData.template;\r\n    this.viewModel = Reflect.construct(componentData.ViewModel, []);\r\n    this.viewModelProxy = _ViewModel_Proxy_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(this);\r\n    this.view = this.createView();\r\n    this.binder = new _BoundNode_Binder_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\r\n    this.stackIndexes = new _Stack_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n    this.activeProperties = new _ViewModel_ActiveProperties_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.viewModelProxy.$definedProperties);\r\n    this.updateActiveProperty(); \r\n  }\r\n  \r\n  /**\r\n   * 親コンポーネント\r\n   * @type {BaseComponent}\r\n   */\r\n  get parentComponent() {\r\n    if (typeof this.#parentComponent === \"undefined\") {\r\n      let node = this;\r\n      do {\r\n        node = node.parentNode;\r\n        if (node == null) break;\r\n        if (node instanceof ShadowRoot) {\r\n          node = node.host;\r\n          break;\r\n        }\r\n        if (node instanceof BaseComponent) break;\r\n      } while(true);\r\n      this.#parentComponent = node;\r\n    }\r\n    return this.#parentComponent;\r\n  }\r\n  set parentComponent(component) {\r\n    this.#parentComponent = component;\r\n  }\r\n\r\n  /**\r\n   * shadowRootを使ってカプセル化をしない(true)\r\n   * @type {boolean}\r\n   */\r\n  get withoutShadowRoot() {\r\n    return this.hasAttribute(\"without-shadowroot\");\r\n  }\r\n\r\n  set withoutShadowRoot(value) {\r\n    if (value) {\r\n      this.setAttribute(\"without-shadowroot\", \"\");\r\n    } else {\r\n      this.removeAttribute(\"without-shadowroot\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初期化用プロミス\r\n   * 子コンポーネントは親コンポーネントの初期化用プロミスをwaitする\r\n   * @type {Promise}\r\n   */\r\n  get initializePromise() {\r\n    return this.#initializePromise;\r\n  }\r\n  get isInitializing() {\r\n    return this.#isInitializing;\r\n  }\r\n  /**\r\n   * ダイアログ情報をセット\r\n   * ダイアログをオープンしたコンポーネントがこの情報を持つ\r\n   * @param {Component} component ダイアログをオープンしたコンポーネント\r\n   * @param {(returnValue:any)=>{}} resolve 正常終了のためのresolve\r\n   * @param {()=>{}} reject キャンセルのためのreject\r\n   * @param {Object<string,any>} params 入力情報\r\n   */\r\n  setDialogInfo(component, resolve, reject, params) {\r\n    this.#componentForDialog = component;\r\n    this.#resolveForDialog = resolve;\r\n    this.#rejectForDialog = reject;\r\n    this.#paramsForDialog = params;\r\n  }\r\n  get resolveForDialog() {\r\n    return this.#resolveForDialog;\r\n  }\r\n  get rejectForDialog() {\r\n    return this.#rejectForDialog;\r\n  }\r\n  get paramsForDialog() {\r\n    return this.#paramsForDialog;\r\n  }\r\n  get componentForDialog() {\r\n    return this.#componentForDialog;\r\n  }\r\n  \r\n  /**\r\n   * ダイアログ正常終了\r\n   * @param {Any} data 戻りデータ\r\n   */\r\n  closeDialog(data) {\r\n    this.resolveForDialog(data);\r\n  }\r\n\r\n  /**\r\n   * ダイアログキャンセル終了\r\n   */\r\n  cancelDialog() {\r\n    this.rejectForDialog();\r\n  }\r\n\r\n  /**\r\n   * ダイアログコンポーネント初期処理\r\n   * このコンポーネントのBoundNodeを生成し\r\n   * viewのレンダリングを行う\r\n   */\r\n  async dialogComponentInit() {\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].current.asyncProc(async () => {\r\n      const boundNode = new _BoundNode_BoundComponent_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this, this.componentForDialog);\r\n      boundNode.bind(this.paramsForDialog);\r\n      await this.viewModelProxy.$init();\r\n      this.updateActiveProperty();\r\n      this.view.render();\r\n    }, this, []);\r\n  }\r\n\r\n  /**\r\n   * 親コンポーネントがない場合のコンポーネント初期処理\r\n   * このコンポーネントのBoundNodeを生成し、rootBinderへ登録する\r\n   */\r\n  async topComponentInit() {\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].current.asyncProc(async () => {\r\n      const boundNode = new _BoundNode_BoundComponent_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this, null, []);\r\n      boundNode.bind();\r\n      await this.viewModelProxy.$init();\r\n      this.updateActiveProperty();\r\n      _BoundNode_Binder_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].rootBinder.add(boundNode);\r\n      this.view.render();\r\n    }, this, []);\r\n  }\r\n\r\n  /**\r\n   * デフォルトのコンポーネント初期化処理\r\n   * 親コンポーネントの初期化終了を待つ\r\n   * viewModelの初期化\r\n   * viewのレンダリングを行う\r\n   * @async\r\n   */\r\n  async defaultComponentInit() {\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].current.asyncProc(async () => {\r\n      await this.parentComponent.initializePromise;\r\n      await this.viewModelProxy.$init();\r\n      this.updateActiveProperty();\r\n      this.view.render();\r\n    }, this, []);\r\n  }\r\n\r\n  /**\r\n   * コンポーネント初期化\r\n   * @async\r\n   */\r\n  async componentInit() {\r\n    try {\r\n      if (\"dialog\" in this.dataset) {\r\n        await this.dialogComponentInit();\r\n      } else if (this.parentComponent == null) {\r\n        await this.topComponentInit();\r\n      } else {\r\n        await this.defaultComponentInit();\r\n      }\r\n    } finally {\r\n      this.#isInitializing = false;\r\n      this.#initializeResolve(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @type {ActiveProperties}\r\n   */\r\n  activeProperties;\r\n\r\n  /**\r\n   * @type {Map<string,ActiveProperty>}\r\n   */\r\n  updateActiveProperty() {\r\n    this.activeProperties.build(this.viewModelProxy);\r\n  }\r\n  /**\r\n   * 接続時コールバック\r\n   */\r\n  async connectedCallback() {\r\n//    console.log(`${this.tagName}.connectedCallback()`);\r\n    await this.componentInit();\r\n  }\r\n    \r\n  disconnectedCallback() {\r\n//    console.log(`${this.tagName}.disconnectedCallback()`);\r\n  }\r\n    \r\n  adoptedCallback() {\r\n//    console.log(`${this.tagName}.adoptedCallback()`);\r\n  }\r\n    \r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n//    console.log(`${this.tagName}.attributeChangedCallback(${name}, ${oldValue}, ${newValue})`);\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/Component/BaseComponent.js?");

/***/ }),

/***/ "./src/Component/ComponentData.js":
/*!****************************************!*\
  !*** ./src/Component/ComponentData.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ComponentData)\n/* harmony export */ });\n/**\r\n * コンポーネントを定義するデータ\r\n */\r\nclass ComponentData {\r\n  /**\r\n   * HTMLテンプレートの文字列\r\n   * @type {string} \r\n   */\r\n  html;\r\n  /**\r\n   * CSS定義部分の文字列\r\n   * @type {string} \r\n   */\r\n  css;\r\n  /**\r\n   * \r\n   * @type {HTMLTemplateElement}\r\n   */\r\n  template;\r\n  /**\r\n   * ViewModelクラス\r\n   * @type {Class}\r\n   */\r\n  ViewModel;\r\n\r\n  /**\r\n   * \r\n   * @static\r\n   * @param {{html:string,css:string,ViewModel:Class}} data \r\n   * @returns {ComponentData}\r\n   */\r\n  static create(data) {\r\n    const componentData = Object.assign(new ComponentData, data);\r\n    componentData.template = componentData.template ?? \r\n      this.createTemplate(this.mergeHtml(componentData.html, componentData.css));\r\n    return componentData;\r\n  }\r\n  \r\n  /**\r\n   * htmlの{param}を<!--@@param-->に置換する。\r\n   * cssとhtmlを結合する。\r\n   * @static\r\n   * @param {string} html \r\n   * @param {string} css \r\n   * @returns {string}\r\n   */\r\n  static mergeHtml(html, css) {\r\n    html = html.replaceAll(/\\{([^\\}]+)\\}/g, (match, p1) => `<!--@@${p1}-->`);\r\n    return (css ? `<style>${css}</style>` : \"\") + (html ?? \"\");\r\n  }\r\n\r\n  /**\r\n   * templateオブジェクトを生成する\r\n   * @static\r\n   * @param {string} html \r\n   * @returns {HTMLTemplateElement}\r\n   */\r\n  static createTemplate(html) {\r\n    const template = document.createElement(\"template\");\r\n    template.innerHTML = html;\r\n    return template;\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/Component/ComponentData.js?");

/***/ }),

/***/ "./src/Component/Stack.js":
/*!********************************!*\
  !*** ./src/Component/Stack.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Stack)\n/* harmony export */ });\n/**\r\n * スタック\r\n */\r\nclass Stack {\r\n  stack = [];\r\n  \r\n  /**\r\n   * スタックを積んで、callbackを実行\r\n   * @param {any} value \r\n   * @param {()=>{}} callback \r\n   * @returns \r\n   */\r\n  push(value, callback) {\r\n    let result;\r\n    this.stack.push(value);\r\n    try {\r\n      result = callback();\r\n    } finally {\r\n      this.stack.pop();\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 現在のスタック\r\n   * @type {any}\r\n   */\r\n  get current() {\r\n    return this.stack[this.stack.length - 1]; \r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/Component/Stack.js?");

/***/ }),

/***/ "./src/Component/WebComponent.js":
/*!***************************************!*\
  !*** ./src/Component/WebComponent.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Component\": () => (/* binding */ Component),\n/* harmony export */   \"default\": () => (/* binding */ WebComponent)\n/* harmony export */ });\n/* harmony import */ var _BaseComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseComponent.js */ \"./src/Component/BaseComponent.js\");\n/* harmony import */ var _ComponentData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ComponentData.js */ \"./src/Component/ComponentData.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\n/**\r\n * タグ名とコンポーネントデータの関連付けを保存する。\r\n */\r\nclass ComponentDataByTagName extends Map {\r\n  /**\r\n   * タグ名とコンポーネントデータの関連付けする。\r\n   * コンポーネントクラスを作成し、カスタムエレメンツに登録する\r\n   * @param {string} lowerTagName \r\n   * @param {ComponentData} componentData \r\n   */\r\n  set(lowerTagName, componentData) {\r\n    super.set(lowerTagName.toUpperCase(), componentData);\r\n    const componentClass = class extends Component {}; // 同じクラスを登録できないため\r\n    customElements.define(lowerTagName, componentClass);\r\n  }\r\n}\r\n\r\n/**\r\n * カスタムエレメンツに登録するコンポーネント\r\n */\r\nclass Component extends _BaseComponent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * コンストラクタ\r\n   * タグから、登録されたコンポーネントの情報を取得し、コンポーネントを構築する\r\n   */\r\n  constructor() {\r\n    super();\r\n    super.build(WebComponent.getComponentDataByTagName(this.tagName));\r\n  }\r\n}\r\n\r\n/**\r\n * WebComponentを管理するクラス\r\n * Prefixの格納、タグ名とコンポーネントデータの関連付け\r\n */\r\nclass WebComponent {\r\n  /**\r\n   * @type {string}\r\n   */\r\n  static #prefix;\r\n  /**\r\n   * @return {string}\r\n   */\r\n  static get prefix() {\r\n    return this.#prefix;\r\n  }\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  static set prefix(value) {\r\n    this.#prefix = value;\r\n  }\r\n  /**\r\n   * \r\n   * @param {string} name \r\n   * @returns {string}\r\n   */\r\n  static tagName(name) {\r\n    return this.#prefix ? `${this.#prefix}-${name}` : name;\r\n  }\r\n\r\n  /**\r\n   * @type {ComponentDataByTagName}\r\n   */\r\n  static #componentDataByTagName = new ComponentDataByTagName();\r\n  /**\r\n   * タグ名からコンポーネントデータを取得する\r\n   * @param {string} tagName \r\n   * @returns {ComponentData}\r\n   */\r\n  static getComponentDataByTagName(tagName) {\r\n    return this.#componentDataByTagName.get(tagName);\r\n  }\r\n  /**\r\n   * タグ名とコンポーネントデータの関連付けを登録する\r\n   * @param {string} name \r\n   * @param {ComponentData} componentData \r\n   */\r\n  static registComponentData(name, componentData) {\r\n    this.#componentDataByTagName.set(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].toKebabCase(name), componentData);\r\n  }\r\n\r\n}\r\n\n\n//# sourceURL=webpack://re-data-x/./src/Component/WebComponent.js?");

/***/ }),

/***/ "./src/Filter/Builtin.js":
/*!*******************************!*\
  !*** ./src/Filter/Builtin.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inputFilters\": () => (/* binding */ inputFilters),\n/* harmony export */   \"outputFilters\": () => (/* binding */ outputFilters)\n/* harmony export */ });\n\r\n\r\nclass outputFilters {\r\n  static localeString = (value, options) => (value != null) ? Number(value).toLocaleString() : \"\";\r\n  static fixed        = (value, options) => value?.toFixed(options[0] ?? 0) ?? \"\";\r\n  static styleDisplay = (value, options) => value ? (options[0] ?? \"\") : \"none\";\r\n  static truthy       = (value, options) => value ? true : false;\r\n  static falsey       = (value, options) => !value ? true : false;\r\n  static not          = this.falsey;\r\n  static upperCase    = (value, options) => value?.toUpperCase() ?? \"\";\r\n  static lowerCase    = (value, options) => value?.toLowerCase() ?? \"\";\r\n  static eq           = (value, options) => value == options[0];\r\n  static ne           = (value, options) => value != options[0];\r\n  static lt           = (value, options) => Number(value) < Number(options[0]);\r\n  static le           = (value, options) => Number(value) <= Number(options[0]);\r\n  static gt           = (value, options) => Number(value) > Number(options[0]);\r\n  static ge           = (value, options) => Number(value) >= Number(options[0]);\r\n  static embed        = (value, options) => decodeURI((options[0] ?? \"\").replaceAll(\"%s\", value));\r\n  static ifText       = (value, options) => value ? options[0] ?? \"\" : options[1] ?? \"\";\r\n  static null         = (value, options) => (value == null) ? true : false;\r\n}\r\n\r\nclass inputFilters {\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/Filter/Builtin.js?");

/***/ }),

/***/ "./src/Filter/Filter.js":
/*!******************************!*\
  !*** ./src/Filter/Filter.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Filter)\n/* harmony export */ });\n/* harmony import */ var _Builtin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Builtin.js */ \"./src/Filter/Builtin.js\");\n\r\n\r\n// \"property:vmProperty|toFix,2|toLocaleString;\"\r\n// => toFix,2|toLocaleString\r\n\r\nclass Filter {\r\n  static applyForInput = (value, filters) => \r\n    filters.reduceRight((v, f) => (f.name in _Builtin_js__WEBPACK_IMPORTED_MODULE_0__.inputFilters) ? _Builtin_js__WEBPACK_IMPORTED_MODULE_0__.inputFilters[f.name](v, f.options) : v, value);\r\n  static applyForOutput = (value, filters) =>\r\n    filters.reduce((v, f) => (f.name in _Builtin_js__WEBPACK_IMPORTED_MODULE_0__.outputFilters) ? _Builtin_js__WEBPACK_IMPORTED_MODULE_0__.outputFilters[f.name](v, f.options) : v, value);\r\n}\r\n\n\n//# sourceURL=webpack://re-data-x/./src/Filter/Filter.js?");

/***/ }),

/***/ "./src/Filter/FilterData.js":
/*!**********************************!*\
  !*** ./src/Filter/FilterData.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n  name;\r\n  options;\r\n});\n\n//# sourceURL=webpack://re-data-x/./src/Filter/FilterData.js?");

/***/ }),

/***/ "./src/Globals/Globals.js":
/*!********************************!*\
  !*** ./src/Globals/Globals.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _BoundNode_Binder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BoundNode/Binder.js */ \"./src/BoundNode/Binder.js\");\n\r\n\r\n\r\nclass GlobalHandler {\r\n  /**\r\n   * \r\n   * @param {Object} target \r\n   * @param {string} prop \r\n   * @param {any} value \r\n   * @param {Proxy} receiver \r\n   * @returns {boolean} true\r\n   */\r\n  set(target, prop, value, receiver) {\r\n    Reflect.set(target, prop, value, receiver);\r\n    _BoundNode_Binder_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rootBinder.updateForNotify(new Set([prop]), new Set([`$$${prop}`]));\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @type {Proxy}\r\n */\r\nconst globalProxy = new Proxy({}, new GlobalHandler);\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (globalProxy);\r\n\n\n//# sourceURL=webpack://re-data-x/./src/Globals/Globals.js?");

/***/ }),

/***/ "./src/Notify/Notify.js":
/*!******************************!*\
  !*** ./src/Notify/Notify.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _NotifyData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NotifyData.js */ \"./src/Notify/NotifyData.js\");\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _ViewModel_DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ViewModel/DefinedProperty.js */ \"./src/ViewModel/DefinedProperty.js\");\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n  /**\r\n   * @type {NotifyData[]}\r\n   */\r\n  queue = [];\r\n  /**\r\n   * @type {Component}\r\n   */\r\n  component;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Component} component \r\n   */\r\n  constructor(component) {\r\n    this.component = component;\r\n  }\r\n  \r\n  /**\r\n   * 更新通知データをキューに入れる\r\n   * @param {NotifyData} notifyData \r\n   * @param {NotifyData[]?} queue \r\n   */\r\n  enqueue(notifyData, queue = this.queue) {\r\n    //notifyData.prop.startsWith(\"__\") && (notifyData.prop = notifyData.prop.slice(2));\r\n    if (notifyData.component.isInitializing) {\r\n      return;\r\n    }\r\n    queue.push(notifyData);\r\n  }\r\n\r\n  /**\r\n   * 更新通知からプロパティの内容をノードへ反映する\r\n   * @param {NotifyData[]?} queue \r\n   */\r\n  updateElements(queue = this.queue) {\r\n    do {\r\n      const notifications = queue.slice();\r\n      if (notifications.length === 0) break;\r\n      queue.splice(0);\r\n\r\n      // コンポーネント毎に通知をまとめる\r\n      /**\r\n       * @type {Map<Component,NotifyData[]>}\r\n       */\r\n      const notificationsByComponent = new Map;\r\n      notifications.forEach(notification => {\r\n        if (!notificationsByComponent.has(notification.component)) {\r\n          notificationsByComponent.set(notification.component, []);\r\n        }\r\n        const notifications = notificationsByComponent.get(notification.component);\r\n        notifications.push(notification);\r\n      });\r\n\r\n      // 通知に一致するプロパティをDOMへ反映する\r\n      for(let [component, notifications] of notificationsByComponent.entries()) {\r\n        component?.updateActiveProperty();\r\n        const viewModelProxy = component?.viewModelProxy;\r\n        /**\r\n         * \r\n         * @param {NotifyData[]} notifications \r\n         * @returns {NotifyData[]}\r\n         */\r\n        const getAddNotifications = notifications => {\r\n          // リストの要素の場合、関連するプロパティは削除する\r\n          const setOfArrayProps = viewModelProxy?.$setOfArrayProps ?? new Set;\r\n          const setOfRelativePropsByProp = viewModelProxy?.$setOfRelativePropsByProp ?? new Set;\r\n          const setOfRemoveNotifications = new Set;\r\n          for(const notification of notifications) {\r\n            if (!setOfArrayProps.has(notification.prop)) continue;\r\n            const setOfRelativeProp = setOfRelativePropsByProp[notification.prop] ?? new Set;\r\n            for(const relateNotification of notifications) {\r\n              if (!setOfRelativeProp.has(relateNotification.prop)) continue;\r\n              setOfRemoveNotifications.add(relateNotification);\r\n            }\r\n          }\r\n          notifications = notifications.filter(notification => !setOfRemoveNotifications.has(notification));\r\n\r\n          const addNotifications = [];\r\n          if (\"$onNotify\" in viewModelProxy ?? {}) {\r\n            addNotifications.push(\r\n              ...Array.from(notifications)\r\n                .flatMap(notification => viewModelProxy.$onNotify(notification))\r\n                .filter(notification => notification != null)\r\n                .flatMap(notification => {\r\n                  const definedProp = _ViewModel_DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create(notification.prop);\r\n                  if (notification.indexes.length < definedProp.level) {\r\n                    const activeProperties = component.activeProperties.search(notification.prop, notification.indexes) ?? [];\r\n                    return activeProperties.map(activeProperty => new _NotifyData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](component, activeProperty.name, activeProperty.indexes))\r\n                  } else {\r\n                    return new _NotifyData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](component, notification.prop, notification.indexes);\r\n                  }\r\n                })\r\n            );\r\n          }\r\n          for(const notification of notifications) {\r\n            let setOfRelativeProp = new Set;\r\n            if (setOfArrayProps.has(notification.prop)) {\r\n              // リストの要素で\"${prop}.*.\"で始まる関連プロパティを追加しない\r\n              const compProp = `${notification.prop}.*.`;\r\n              setOfRelativePropsByProp.get(notification.prop)?.forEach(prop => !prop.startsWith(compProp) && setOfRelativeProp.add(prop));\r\n            } else {\r\n              setOfRelativeProp = setOfRelativePropsByProp.get(notification.prop) ?? new Set;\r\n            }\r\n            addNotifications.push(...Array.from(setOfRelativeProp).flatMap(prop => {\r\n              const definedProp = _ViewModel_DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create(prop);\r\n              if (notification.indexes.length < definedProp.level) {\r\n                const activeProperties = component.activeProperties.search(prop, notification.indexes) ?? [];\r\n                return activeProperties.map(activeProperty => new _NotifyData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](component, activeProperty.name, activeProperty.indexes));\r\n              } else {\r\n                return new _NotifyData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](component, prop, notification?.indexes);\r\n              }\r\n            })) ;\r\n          }\r\n          return addNotifications;\r\n        }\r\n        const arrayNotifications = [ notifications ];\r\n        let tempNotifications = notifications;\r\n        do {\r\n          const addNotifications = getAddNotifications(tempNotifications);\r\n          if (addNotifications.length === 0) break;\r\n          arrayNotifications.push(addNotifications);\r\n          tempNotifications = addNotifications;\r\n        } while(true);\r\n\r\n        const allNotifications = arrayNotifications.flatMap(notification => notification);\r\n        const notificationByPath = new Map;\r\n        allNotifications.reduce((map, notification) => map.set(notification.path, notification), notificationByPath);\r\n\r\n        const setOfNotificationPaths = new Set(notificationByPath.keys());\r\n        viewModelProxy.$deleteCache(setOfNotificationPaths);\r\n        //console.log(component.tagName, Array.from(setOfNotifications).join(\",\"));\r\n        //console.time(\"component.binder.updateForNotify\");\r\n        component.binder.updateForNotify(setOfNotificationPaths, new Set);\r\n        //console.timeEnd(\"component.binder.updateForNotify\");\r\n        if (\"$onChange\" in viewModelProxy ?? {}) {\r\n          viewModelProxy.$asyncProc(async () => {\r\n            await viewModelProxy.$onChange(Array.from(notificationByPath.values()));\r\n          });\r\n        }\r\n      }    \r\n  \r\n    } while(true);\r\n  }\r\n});\r\n/**\r\nlistの場合、\r\nlist.*\r\nlist.*.id\r\nlist.*.label\r\nlist.*.selected\r\nは再構築されるので、notifyに含みたくない\r\n\r\nlist.*, [0]の場合\r\nlist.*.id, [0]\r\nlist.*.label, [0]\r\nlist.*.selected, [0]\r\nをnotifyに含みたい\r\n\r\nlist\r\nViewModelにlist.*が存在すれば、配列とみなす\r\n配列の場合、notifyからlist.*.で始まるものは削除\r\n\r\nlist.*\r\nViewModelにlist.*.*が存在すれば、配列とみなす\r\n配列でない場合、notifyにlist.*.で始まるものを追加\r\n\r\n */\n\n//# sourceURL=webpack://re-data-x/./src/Notify/Notify.js?");

/***/ }),

/***/ "./src/Notify/NotifyData.js":
/*!**********************************!*\
  !*** ./src/Notify/NotifyData.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NotifyData)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n/**\r\n * 更新したViewModelのプロパティの情報\r\n */\r\nclass NotifyData {\r\n  /**\r\n   * コンポーネント\r\n   * @type {BaseComponent} \r\n   */\r\n  component;\r\n  /**\r\n   * 更新したViewModelのプロパティ名\r\n   * @type {string} \r\n   */\r\n  prop;\r\n  /**\r\n   * 更新したViewModelのループインデックス\r\n   * @type {Array<integer>} \r\n   */\r\n  indexes;\r\n  /**\r\n   * プロパティ名をループインデックス展開したもの\r\n   * 例\r\n   * prop: \"list.*.name\"\r\n   * indexes: [12]\r\n   * path: \"list.12.name\"\r\n   * @type {string}\r\n   */\r\n  path;\r\n  /**\r\n   * コンポーネント内でのユニークキー（同一プロパティの重複を排除したいので）\r\n   * 書式：\r\n   * プロパティ名\\tループインデックスのjoin(\\t)\r\n   * @type {string}\r\n   */\r\n  key;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {BaseComponent} component \r\n   * @param {string} prop \r\n   * @param {Array<integer>} indexes \r\n   */\r\n  constructor(component, prop, indexes) {\r\n    // console.log(\"NotifyData\", component.tagName, prop, (indexes ?? []).join(\",\"))\r\n    const safeIndexes = indexes ?? [];\r\n    this.component = component;\r\n    this.prop = prop;\r\n    this.indexes = safeIndexes;\r\n    this.path = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPath(prop, safeIndexes);\r\n    this.indexesKey = this.indexes.join(\"\\t\");\r\n    this.key =`${this.prop}\\t${this.indexesKey}`;\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/Notify/NotifyData.js?");

/***/ }),

/***/ "./src/Thread/Thread.js":
/*!******************************!*\
  !*** ./src/Thread/Thread.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Thread)\n/* harmony export */ });\n/* harmony import */ var _AsyncProc_AsyncProcData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AsyncProc/AsyncProcData.js */ \"./src/AsyncProc/AsyncProcData.js\");\n/* harmony import */ var _AsyncProc_AsyncProc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncProc/AsyncProc.js */ \"./src/AsyncProc/AsyncProc.js\");\n/* harmony import */ var _Notify_NotifyData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notify/NotifyData.js */ \"./src/Notify/NotifyData.js\");\n/* harmony import */ var _Notify_Notify_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Notify/Notify.js */ \"./src/Notify/Notify.js\");\n/* harmony import */ var _UpdateNodeSchedule_UpdateNodeData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../UpdateNodeSchedule/UpdateNodeData.js */ \"./src/UpdateNodeSchedule/UpdateNodeData.js\");\n/* harmony import */ var _UpdateNodeSchedule_UpdateNodeScheduler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../UpdateNodeSchedule/UpdateNodeScheduler.js */ \"./src/UpdateNodeSchedule/UpdateNodeScheduler.js\");\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 更新処理実行\r\n */\r\nclass Updator {\r\n  asyncProc = new _AsyncProc_AsyncProc_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  notify = new _Notify_Notify_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  updateNodeScheduler = new _UpdateNodeSchedule_UpdateNodeScheduler_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   *  非同期処理データのキューイング\r\n   * @param {AsyncProc} data \r\n   */\r\n  enqueueAsyncProc(data) {\r\n    this.asyncProc.enqueue(data);\r\n  }\r\n\r\n  /**\r\n   *  更新通知のキューイング\r\n   * @param {NotifyData} data \r\n   */\r\n  enqueueNotify(data) {\r\n    this.notify.enqueue(data);\r\n  }\r\n\r\n  /**\r\n   *  ノード更新のキューイング\r\n   * @param {UpdateNodeData} data \r\n   */\r\n   enqueueUpdateNode(data) {\r\n    this.updateNodeScheduler.enqueue(data);\r\n  }\r\n\r\n  /**\r\n   * 実行\r\n   * 非同期処理を実行し、更新通知に従いViewを更新し、ノード更新処理を実行する\r\n   */\r\n  async exec() {\r\n    do {\r\n      // 非同期処理実行\r\n      //console.time(\"asyncProc\");\r\n      await this.asyncProc.exec();\r\n      //console.timeEnd(\"asyncProc\");\r\n      // View更新\r\n      //console.time(\"updateElements\");\r\n      this.notify.updateElements();\r\n      //console.timeEnd(\"updateElements\");\r\n      // ノード更新処理実行\r\n      //console.time(\"updateNodeScheduler\");\r\n      this.updateNodeScheduler.exec();\r\n      //console.timeEnd(\"updateNodeScheduler\");\r\n      if (this.asyncProc.queue.length == 0 \r\n        && this.notify.queue.length == 0 \r\n        && this.updateNodeScheduler.queue.length == 0 ) break;\r\n    } while(true);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * 実行スレッド\r\n * 通常一つだが、ダイアログを生成したら、新たに実行スレッドを作成する。\r\n */\r\nclass Thread {\r\n  resolve;\r\n  reject;\r\n  updator;\r\n  component;\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Component?} component \r\n   */\r\n  constructor(component = null) {\r\n    this.component = component;\r\n    this.main();\r\n  }\r\n\r\n  /**\r\n   * Updatorを指定し、実行待ちを解除する\r\n   * @param {Updator} updator \r\n   */\r\n  wakeup(updator) {\r\n    this.resolve(updator);\r\n  }\r\n\r\n  /**\r\n   * スレッドの実行を停止する\r\n   */\r\n  stop() {\r\n    this.reject();\r\n  }\r\n\r\n  /**\r\n   * プロミスを返す\r\n   * resolveとrejectをセットする\r\n   * @returns {Promise}\r\n   */\r\n  sleep() {\r\n    return new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * メインループ\r\n   * 実行待ち、更新通知もしくは非同期処理を登録されたら、その実行を行う\r\n   * 実行後、再び実行待ちの戻る\r\n   */\r\n  async main() {\r\n    do {\r\n      try {\r\n        this.updator = await this.sleep();\r\n        try {\r\n          //connsole.time(\"update\");\r\n          await this.updator.exec();\r\n          //console.timeEnd(\"update\");\r\n        } finally {\r\n          this.updator = null;\r\n        }\r\n      } catch(e) {\r\n        if (typeof e !== \"undefined\") {\r\n          console.error(e);\r\n          if (!confirm(\"致命的エラーが発生しました。継続しますか？\")) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } while(true);\r\n  }\r\n\r\n  /**\r\n   * 非同期処理の登録\r\n   * @param {()=>{}} target \r\n   * @param {Object} thisArg \r\n   * @param {any[]} args \r\n   */\r\n  asyncProc(target, thisArg, args) {\r\n    const updator = this.updator ?? new Updator;\r\n    updator.enqueueAsyncProc(new _AsyncProc_AsyncProcData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](target, thisArg, args));\r\n    this.updator || this.wakeup(updator);\r\n  }\r\n\r\n  /**\r\n   * 更新通知の登録\r\n   * @param {Component} component 通知するコンポーネント\r\n   * @param {string} prop 更新するプロパティ\r\n   * @param {integer[]} indexes 更新するプロパティのインデックス配列\r\n   */\r\n  notify(component, prop, indexes) {\r\n    const updator = this.updator ?? new Updator;\r\n    updator.enqueueNotify(new _Notify_NotifyData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](component, prop, indexes));\r\n    this.updator || this.wakeup(updator);\r\n  }\r\n\r\n  /**\r\n   * ノード更新の登録\r\n   * @param {Node} node 更新するノード\r\n   * @param {string[]} props 更新するノードプロパティのリスト\r\n   * @param {()=>{}} proc 更新処理\r\n   */\r\n  updateNode(node, prop, proc) {\r\n    const updator = this.updator ?? new Updator;\r\n    updator.enqueueUpdateNode(new _UpdateNodeSchedule_UpdateNodeData_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](node, prop, proc));\r\n    this.updator || this.wakeup(updator);\r\n  }\r\n\r\n  /**\r\n   * スレッドのキュー\r\n   * @type {Thread[]}\r\n   */\r\n  static queue = [ new Thread ];\r\n\r\n  /**\r\n   * 現在のスレッド\r\n   * @type {Thread} \r\n   */\r\n  static get current() {\r\n    return this.queue.at(-1);\r\n  }\r\n\r\n  /**\r\n   * 別スレッドを作成する\r\n   * @param {Component?} component \r\n   */\r\n  static suspend(component) {\r\n    this.queue.push(new Thread(component));\r\n  }\r\n\r\n  /**\r\n   * 現在のスレッドを停止し、元のスレッドを復帰\r\n   */\r\n  static resume() {\r\n    const curThread = this.queue.pop();\r\n    curThread.stop();\r\n  }\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack://re-data-x/./src/Thread/Thread.js?");

/***/ }),

/***/ "./src/UpdateNodeSchedule/UpdateNodeData.js":
/*!**************************************************!*\
  !*** ./src/UpdateNodeSchedule/UpdateNodeData.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UpdateNodeData)\n/* harmony export */ });\nclass UpdateNodeData {\r\n  /**\r\n   * 更新するノード\r\n   * @type {Node}\r\n   */\r\n  node;\r\n  /**\r\n   * 更新するプロパティ名のリスト\r\n   * @type {string[]}\r\n   */\r\n  props;\r\n  /**\r\n   * 更新を実施する関数\r\n   * @type {()=>{}}\r\n   */\r\n  proc;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Node} node \r\n   * @param {string[]} props \r\n   * @param {()=>{}} proc \r\n   */\r\n  constructor(node, props, proc) {\r\n    this.node = node;\r\n    this.props = props;\r\n    this.proc = proc;\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/UpdateNodeSchedule/UpdateNodeData.js?");

/***/ }),

/***/ "./src/UpdateNodeSchedule/UpdateNodeScheduler.js":
/*!*******************************************************!*\
  !*** ./src/UpdateNodeSchedule/UpdateNodeScheduler.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UpdateNodeScheduler)\n/* harmony export */ });\n/* harmony import */ var _UpdateNodeData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UpdateNodeData.js */ \"./src/UpdateNodeSchedule/UpdateNodeData.js\");\n\r\n\r\n/**\r\n * 更新するノードのスケジュールを変更して更新を行う\r\n * selectとoptionの順番を変更、option >> selectの順で更新する\r\n */\r\nclass UpdateNodeScheduler {\r\n  /**\r\n   * @type {UpdateNodeData[]}\r\n   */\r\n  queue = [];\r\n  \r\n  /**\r\n   * 更新するノード情報をキューへ登録\r\n   * @param {UpdateNodeData} updateNodeScheduleData 更新するノード情報\r\n   * @param {UpdateNodeData[]?} [queue = this.queue] キュー\r\n   */\r\n  enqueue(asyncProcData, queue = this.queue) {\r\n    queue.push(asyncProcData);\r\n  }\r\n\r\n  /**\r\n   * キューの並べ替え\r\n   * selectとoptionの順番を変更、option >> selectの順で更新する\r\n   * selectを最後に持ってくる\r\n   * @param {UpdateNodeData[]} queue キュー\r\n   * @return {UpdateNodeData[]}\r\n   */\r\n  static reorder(queue) {\r\n    const updateNodes = queue.slice();\r\n    updateNodes.sort((n1, n2) => {\r\n      if (n1.node instanceof HTMLSelectElement && n1.props.length === 1 && n1.props[0] === \"value\") return 1;\r\n      return -1;\r\n    });\r\n    return updateNodes;\r\n  }\r\n\r\n  /**\r\n   * キューのスケジューリング\r\n   * ノード更新処理の実行\r\n   * キューに滞留しているノード更新処理をすべて取得し実行する\r\n   * @param {UpdateNodeData[]?} [queue = this.queue] queue キュー\r\n   * @async\r\n   */\r\n  exec(queue = this.queue) {\r\n    do {\r\n      const updateNodes = queue.slice();\r\n      if (updateNodes.length === 0) break;\r\n      queue.splice(0);\r\n      const orderedUpdateNodes = UpdateNodeScheduler.reorder(updateNodes);\r\n      for(const updaeNode of orderedUpdateNodes) {\r\n        updaeNode.proc();\r\n      }\r\n    } while(true);\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/UpdateNodeSchedule/UpdateNodeScheduler.js?");

/***/ }),

/***/ "./src/ViewModel/ActiveProperties.js":
/*!*******************************************!*\
  !*** ./src/ViewModel/ActiveProperties.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActiveProperties2)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _ActiveProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n/* harmony import */ var _DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DefinedProperty.js */ \"./src/ViewModel/DefinedProperty.js\");\n\r\n\r\n\r\n\r\n// path ... list.1.name\r\n// name ... list.*.name\r\n\r\nclass ActivePropertyProfile {\r\n  /**\r\n   * @type {ActiveProperty}\r\n   */\r\n  activeProperty;\r\n  /**\r\n   * @type {integer[]}\r\n   */\r\n  keys;\r\n  /**\r\n   * @type {}\r\n   */\r\n\r\n  /**\r\n   * \r\n   * @param {ActivePropertyProfile} comp \r\n   */\r\n  compare(comp) {\r\n    return this.activeProperty.compare(comp.activeProperty);\r\n  }\r\n\r\n}\r\n\r\nclass ActiveProperties2 {\r\n  /**\r\n   * @type {ActiveProperty[]}\r\n   */\r\n  fixedActiveProperties = [];\r\n  /**\r\n   * @type {Map<DefinedProperty,ActiveProperty[]>}\r\n   */\r\n  variableActivePropertiesByProp = new Map;\r\n  /**\r\n   * @type {ActiveProperty[]}\r\n   */\r\n  activeProperties = [];\r\n  /**\r\n   * @type {Map<path,ActiveProperty>}\r\n   */\r\n  activePropertyByPath = new Map;\r\n  /**\r\n   * @type {Map<name,ActiveProperty[]>}\r\n   */\r\n  activePropertiesByName = new Map;\r\n  /**\r\n   * @type {Map<name,ActiveProperty[]>}\r\n   */\r\n  activePropertiesByParentPath = new Map;\r\n\r\n  /**\r\n   * $,$$は含まない\r\n   * @type {DefinedProperty[]}\r\n   */\r\n  definedProperties;\r\n  /**\r\n   * @type {Map<string,DefinedProperty>}\r\n   */\r\n  definedPropertyByName;\r\n  /**\r\n   * 配列の値を持つプロパティ\r\n   * ex. \r\n   *   list.* => list\r\n   *   list.*.names.* => list.*.names\r\n   * @type {DefinedProperty[]} \r\n   */\r\n  definedPropertiesOfList;\r\n\r\n  /**\r\n   * @type {ActivePropertyProfile[]}\r\n   */\r\n  lastProfiles = [];\r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   * @returns {ActiveProperty}\r\n   */\r\n  get(path) {\r\n    return this.activePropertyByPath.get(path);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   * @returns {boolean}\r\n   */\r\n  has(path) {\r\n    return this.activePropertyByPath.has(path);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} name \r\n   * @param {integer[]} indexes \r\n   * @returns {ActiveProperty[]}\r\n   */\r\n   search(name, indexes) {\r\n    const activeProperties = this.activePropertiesByName.get(name) ?? [];\r\n    const compString = indexes.toString();\r\n    const isTopLevel = indexes.length === 0;\r\n    return activeProperties.filter(property => isTopLevel ? true : property.indexesStrings[indexes.length - 1] === compString);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} parentPath \r\n   * @param {(activeProperty:ActiveProperty)=>{}} callback \r\n   */\r\n  walkByParentPath(parentPath, callback) {\r\n    const activePropertiesByParentPath = this.activePropertiesByParentPath;\r\n    const walk = parentPath => {\r\n      const activeProperties = activePropertiesByParentPath.get(parentPath) ?? [];\r\n      activeProperties.forEach(property => {\r\n        callback(property);\r\n        walk(property.path);\r\n      })\r\n    }\r\n    walk(parentPath);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {DefinedProperty[]} definedProperties \r\n   */\r\n  constructor(definedProperties) {\r\n    this.definedProperties = definedProperties.filter(prop => !prop.isGlobal && !prop.isContext);\r\n    this.definedPropertyByName = new Map(this.definedProperties.map(prop => [prop.name, prop]));\r\n    this.definedPropertiesOfList = \r\n      this.definedProperties.filter(prop => prop.last === \"*\").map(prop => this.definedPropertyByName.get(prop.parentPath));\r\n    this.definedPropertiesByClosestListName = new Map();\r\n    this.definedPropertyByName.forEach(prop => {\r\n      if (this.definedPropertiesByClosestListName.has(prop.closestListName)) {\r\n        this.definedPropertiesByClosestListName.get(prop.closestListName).push(prop);\r\n      } else {\r\n        this.definedPropertiesByClosestListName.set(prop.closestListName, [prop]);\r\n      }\r\n    });\r\n    this.fixedActiveProperties = this.definedProperties.filter(prop => !prop.isVariable).map(prop => _ActiveProperty_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(prop.name, []));\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Object<string,any>} viewModel \r\n   */\r\n  build(viewModel) {\r\n    /**\r\n     * @type {ActivePropertyProfile[]}\r\n     */\r\n    const profiles = [];\r\n    this.definedPropertiesOfList.filter(prop => prop.level === 0).forEach(parentProp => {\r\n      const walk = (parentProp, indexes) => {\r\n        const activeProperty = _ActiveProperty_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(parentProp.name, indexes);\r\n        //console.log(activeProperty);\r\n        const values = viewModel.$getValue(activeProperty);\r\n        const keys = Object.keys(values);\r\n        profiles.push(Object.assign(new ActivePropertyProfile, { activeProperty, keys }));\r\n        const closestChildProps = this.definedPropertiesOfList.filter(prop => prop.closestListName === parentProp.name);\r\n        for(const closestChildProp of closestChildProps) {\r\n          for(const key in keys) {\r\n            walk(closestChildProp, indexes.concat(key));\r\n          }\r\n        }\r\n      }\r\n      walk(parentProp, []);\r\n\r\n    });\r\n    profiles.sort((p1, p2) => p1.compare(p2))\r\n    let changed = false;\r\n\r\n    /**\r\n     * \r\n     * @param {ActivePropertyProfile} profile \r\n     * @param {integer[]} diffKeys \r\n     * @returns {[DefinedProperty,ActiveProperty[]]}\r\n     */\r\n    const appendProperties = (profile, diffKeys) => {\r\n      const definedProps = this.definedPropertiesByClosestListName.get(profile.activeProperty.name);\r\n      return definedProps.map(definedProp => {\r\n        const appendProperties = diffKeys.map(key => _ActiveProperty_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(definedProp.name, profile.activeProperty.indexes.concat(key)));\r\n        if (this.variableActivePropertiesByProp.has(definedProp)) {\r\n          this.variableActivePropertiesByProp.get(definedProp).push(...appendProperties);\r\n        } else {\r\n          this.variableActivePropertiesByProp.set(definedProp, appendProperties);\r\n        }\r\n        changed = true;\r\n//        return [definedProp, appendProperties];\r\n      });\r\n    };\r\n    /**\r\n     * \r\n     * @param {ActivePropertyProfile} profile \r\n     * @param {integer[]} diffKeys \r\n     * @returns {[DefinedProperty,string[]]}\r\n     */\r\n    const removeProperties = (profile, start) => {\r\n      const definedProps = this.definedPropertiesByClosestListName.get(profile.activeProperty.name);\r\n      return definedProps.map(definedProp => {\r\n        //const removeKeys = diffKeys.map(key => parentDefinedProp.name + \"\\t\" + profile.activeProperty.indexes.concat(key).toString());\r\n        if (this.variableActivePropertiesByProp.has(definedProp)) {\r\n          if (start === null) {\r\n            this.variableActivePropertiesByProp.delete(definedProp);\r\n          } else {\r\n            const array = this.variableActivePropertiesByProp.get(definedProp);\r\n            array.splice(start);\r\n          }\r\n          changed = true;\r\n        }\r\n//        return [definedProp, diffKeys];\r\n      });\r\n    };\r\n\r\n    const lastProfiles = this.lastProfiles;\r\n    let [counter, lastCounter] = [ 0, 0 ];\r\n    /**\r\n     * @type { [ActivePropertyProfile,ActivePropertyProfile] }\r\n     */\r\n    let [profile, lastProfile] = [ null, null ];\r\n    while(profiles[counter] != null || lastProfiles[lastCounter] != null) {\r\n      profile = profiles[counter] ?? null;\r\n      lastProfile = lastProfiles[lastCounter] ?? null;\r\n      if (profile === null && lastProfile !== null) {\r\n        removeProperties(lastProfile, null);\r\n        lastCounter++;\r\n      } else if (profile !== null && lastProfile === null) {\r\n        appendProperties(profile, profile.keys);\r\n        counter++;\r\n      } else {\r\n        const resultComp = profile.compare(lastProfile);\r\n        if (resultComp < 0) {\r\n          appendProperties(profile, profile.keys);\r\n          counter++;\r\n        } else if (resultComp > 0) {\r\n          removeProperties(lastProfile, null);\r\n          lastCounter++;\r\n        } else {\r\n          if (profile.keys.length === lastProfile.keys.length) {\r\n          } else {\r\n            const diff = profile.keys.length - lastProfile.keys.length;\r\n            if (diff > 0) {\r\n              const appendKeys = profile.keys.slice(lastProfile.keys.length, profile.keys.length);\r\n              appendProperties(profile, appendKeys);\r\n            } else {\r\n              removeProperties(lastProfile, profile.keys.length);\r\n            }\r\n          }\r\n          counter++;\r\n          lastCounter++;\r\n        }\r\n      }\r\n\r\n    }\r\n    //console.log(appendingProperties);\r\n    //console.log(deletingProperties);\r\n    this.lastProfiles = profiles;\r\n    if (changed) {\r\n      const activeProperties = this.fixedActiveProperties.slice();\r\n      this.variableActivePropertiesByProp.forEach(properties => {\r\n        activeProperties.push(...properties);\r\n      });\r\n      const mapByPath = new Map(activeProperties.map(prop => [prop.path, prop]));\r\n      const mapByName = new Map;\r\n      activeProperties.forEach(prop => mapByName.has(prop.name) ? mapByName.get(prop.name).push(prop) : mapByName.set(prop.name, [prop]));\r\n      const mapByParentPath = new Map;\r\n      activeProperties.forEach(prop => mapByParentPath.has(prop.parentPath) ? mapByParentPath.get(prop.parentPath).push(prop) : mapByParentPath.set(prop.parentPath, [prop]));\r\n      this.activeProperties = activeProperties;\r\n      this.activePropertyByPath = mapByPath;\r\n      this.activePropertiesByName = mapByName;\r\n      this.activePropertiesByParentPath = mapByParentPath;\r\n    }\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/ViewModel/ActiveProperties.js?");

/***/ }),

/***/ "./src/ViewModel/ActiveProperty.js":
/*!*****************************************!*\
  !*** ./src/ViewModel/ActiveProperty.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActiveProperty)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _DefinedProperty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DefinedProperty.js */ \"./src/ViewModel/DefinedProperty.js\");\n\r\n\r\n\r\n/**\r\n * 実際に使用するプロパティ\r\n * ViewModelの初期化後、リストプロパティが変化したときに登録する\r\n */\r\nclass ActiveProperty {\r\n  /**\r\n   * @type {DefinedProperty} \r\n   */\r\n  definedProp;\r\n  /**\r\n   * @type {string}\r\n   */\r\n  name;\r\n  /**\r\n   * @type {string}\r\n   */\r\n  path;\r\n  /**\r\n   * @type {integer[]}\r\n   */\r\n  indexes;\r\n  /**\r\n   * @type {string} indexes.toString()の値\r\n   */\r\n  indexesString;\r\n  /**\r\n   * @type {string[]}\r\n   */\r\n  indexesStrings;\r\n  /**\r\n   * @type {string}\r\n   */\r\n  parentPath;\r\n\r\n  /**\r\n   * \r\n   * @param {DefinedProperty} definedProp \r\n   * @param {string} path\r\n   * @param {integer[]} indexes\r\n   * @param {string} indexesString\r\n   * @param {string} key\r\n   */\r\n  constructor(definedProp, path, indexes, indexesString, key) {\r\n    this.definedProp = definedProp;\r\n    this.name = definedProp.name\r\n    this.path = path;\r\n    this.indexes = indexes;\r\n    this.indexesString = indexesString;\r\n    this.key = key;\r\n    this.indexesStrings = Array(indexes.length);\r\n    for(let i = 0; i < indexes.length; i++) this.indexesStrings[i] = indexes.slice(0, i + 1).toString();\r\n    this.parentPath = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPath(definedProp.parentPath, indexes);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {ActiveProperty} comp \r\n   */\r\n  compare(comp) {\r\n    const result = this.definedProp.compare(comp.definedProp);\r\n    if (result !== 0) return result;\r\n    for(let i = 0; i < this.indexes.length; i++) {\r\n      const diff = this.indexes[i] - comp.indexes[i];\r\n      if (diff !== 0) return diff;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  static cacheActivePropertyByKey = new Map();\r\n  static cacheActivePropertyByPath = new Map();\r\n  /**\r\n   * \r\n   * @param {string} name \r\n   * @param {integer[]?} indexes \r\n   * @returns {ActiveProperty}\r\n   */\r\n  static create(name, indexes = []) {\r\n    const indexesString = indexes.toString();\r\n    const key = name + \"\\t\" + indexesString;\r\n    if (this.cacheActivePropertyByKey.has(key)) {\r\n      return this.cacheActivePropertyByKey.get(key);\r\n    } else {\r\n      const path = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPath(name, indexes);\r\n      const definedProp = _DefinedProperty_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(name);\r\n      const activeProperty = new ActiveProperty(definedProp, path, indexes, indexesString, key);\r\n      this.cacheActivePropertyByKey.set(key, activeProperty);\r\n      this.cacheActivePropertyByPath.set(path, activeProperty);\r\n      return activeProperty;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} path \r\n   */\r\n  static getByPath(path) {\r\n    return this.cacheActivePropertyByPath.get(path);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Proxy} viewModelProxy \r\n   * @param {ActiveProperty} property \r\n   * @returns {any}\r\n   */\r\n  static getValue(viewModelProxy, property) {\r\n    return viewModelProxy.$getValue(property);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Proxy} viewModelProxy \r\n   * @param {ActiveProperty} property \r\n   * @returns {true}\r\n   */\r\n  static setValue(viewModelProxy, property, value) {\r\n    viewModelProxy.$setValue(property, value);\r\n    return true;\r\n  }\r\n  \r\n}\r\n\n\n//# sourceURL=webpack://re-data-x/./src/ViewModel/ActiveProperty.js?");

/***/ }),

/***/ "./src/ViewModel/Builder.js":
/*!**********************************!*\
  !*** ./src/ViewModel/Builder.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _Globals_Globals_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Globals/Globals.js */ \"./src/Globals/Globals.js\");\n/* harmony import */ var _DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DefinedProperty.js */ \"./src/ViewModel/DefinedProperty.js\");\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _CheckPoint_CheckPoint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CheckPoint/CheckPoint.js */ \"./src/CheckPoint/CheckPoint.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * デフォルトのgetter\r\n * @param {Component} component \r\n * @param {string} parentName\r\n * @param {string} last\r\n * @param {integer} level\r\n * @returns {()=>any}\r\n */\r\nconst defaultGetter = (component, parentName, last, level) => () => {\r\n  const viewModelProxy = component.viewModelProxy;\r\n  const viewModel = component.viewModel;\r\n  const lastIndex = (last === \"*\") ? component.stackIndexes.current[level - 1] : last;\r\n  let result;\r\n  if (level === 0) {\r\n    result = viewModelProxy[parentName]?.[lastIndex];\r\n  } else {\r\n    result = Reflect.get(viewModel, parentName, viewModelProxy)?.[lastIndex];\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * デフォルトのsetter\r\n * @param {Component} component \r\n * @param {string} parentName\r\n * @param {string} last\r\n * @param {integer} level\r\n * @returns {(value:any)=>true}\r\n */\r\nconst defaultSetter = (component, parentName, last, level) => value => {\r\n  const viewModelProxy = component.viewModelProxy;\r\n  const viewModel = component.viewModel;\r\n  const lastIndex = (last === \"*\") ? component.stackIndexes.current[level - 1] : last;\r\n  if (level === 0) {\r\n    viewModelProxy[parentName][lastIndex] = value;\r\n  } else {\r\n    Reflect.get(viewModel, parentName, viewModelProxy)[lastIndex] = value;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * デフォルトのgetter\r\n * @param {Component} component \r\n * @param {string} name \r\n * @returns {()=>any}\r\n */\r\nconst defaultGetterPrimitive = (component, name) => () => {\r\n  const viewModelProxy = component.viewModelProxy;\r\n  const viewModel = component.viewModel;\r\n  return Reflect.get(viewModel, \"__\" + name, viewModelProxy);\r\n}\r\n\r\n/**\r\n * デフォルトのsetter\r\n * @param {Component} component \r\n * @param {string} name \r\n * @returns {(value:any)=>true)}\r\n */\r\nconst defaultSetterPrimitive = (component, name) => value => {\r\n  const viewModelProxy = component.viewModelProxy;\r\n  const viewModel = component.viewModel;\r\n  Reflect.set(viewModel, \"__\" + name, value, viewModelProxy);\r\n  return true;\r\n}\r\n\r\n/**\r\n * デフォルトのgetter\r\n * @param {string} name \r\n * @returns {any}\r\n */\r\nconst defaultGetterGlobalPrimitive = name => () => {\r\n  const propName = name.slice(2); // 先頭$$をスキップ\r\n  return _Globals_Globals_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]?.[propName];\r\n}\r\n\r\n/**\r\n * デフォルトのsetter\r\n * @param {string} name \r\n * @returns {(value:any)=>true}\r\n */\r\nconst defaultSetterGlobalPrimitive = name => value => {\r\n  const propName = name.slice(2); // 先頭$$をスキップ\r\n  _Globals_Globals_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][propName] = value;\r\n  return true;\r\n}\r\n\r\nconst applyGetter = (component) => getter => () => {\r\n  const viewModelProxy = component.viewModelProxy;\r\n  return Reflect.apply(getter, viewModelProxy, []);\r\n}\r\n\r\nconst applySetter = (component) => setter => value => {\r\n  const viewModelProxy = component.viewModelProxy;\r\n  return Reflect.apply(setter, viewModelProxy, [value]);\r\n}\r\n\r\n/**\r\n * @typedef {{getter:()=>any,setter:(value:any)=>boolean,enumerable:boolean,configurable:boolean}} PropertyDescriptor\r\n */\r\n/**\r\n * \r\n * @param {Component} component \r\n * @param {DefinedProperty} definedProperty \r\n * @returns {PropertyDescriptor}\r\n */\r\nconst createDefaultDesc = (component, definedProperty) => {\r\n  const { parentPath, last, level } = definedProperty;\r\n  return {\r\n    get: () => defaultGetter(component, parentPath, last, level)(),\r\n    set: v => defaultSetter(component, parentPath, last, level)(v),\r\n    enumerable: true, \r\n    configurable: true,\r\n  }\r\n};\r\n\r\n/**\r\n * \r\n * @param {Component} component \r\n * @param {string} name \r\n * @returns {PropertyDescriptor}\r\n */\r\nconst createDefaultPrimitiveDesc = (component, name) => {\r\n  return {\r\n    get: () => defaultGetterPrimitive(component, name)(),\r\n    set: v => defaultSetterPrimitive(component, name)(v),\r\n    enumerable: true, \r\n    configurable: true,\r\n  }\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} name \r\n * @returns {PropertyDescriptor}\r\n */\r\nconst createDefaultGlobalPrimitiveDesc = name => {\r\n  return {\r\n    get: () => defaultGetterGlobalPrimitive(name)(),\r\n    set: v => defaultSetterGlobalPrimitive(name)(v),\r\n    enumerable: true, \r\n    configurable: true,\r\n  }\r\n};\r\n\r\n/**\r\n * \r\n * @param {any} value \r\n * @returns {PropertyDescriptor}\r\n */\r\nconst createPrivateDesc = value => ({\r\n  value,\r\n  writable: true, \r\n  enumerable: false, \r\n  configurable: true,\r\n});\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n\r\n  static build(component, viewModel = component.viewModel) {\r\n    // プライベートプロパティ __で始まる\r\n    // コンテキストプロパティ $で始まる\r\n    // グローバルプロパティ $$で始まる\r\n    /**\r\n     * @type {Map<string,PropertyDescriptor>}\r\n     */\r\n    const descByProp = new Map;\r\n    const setOfPrivateProps = new Set(Object.keys(viewModel).filter(prop => prop.startsWith(\"__\")));\r\n    const setOfContextProps = new Set(Object.keys(viewModel).filter(prop => prop[0] === \"$\" && prop[1] !== \"$\"));\r\n    const setOfGlobalProps = new Set(Object.keys(viewModel).filter(prop => prop.startsWith(\"$$\")));\r\n    const importProps = [];\r\n\r\n    const createDesc = (name, value = null) => {\r\n      if (setOfGlobalProps.has(name)) {\r\n        descByProp.set(name, createDefaultGlobalPrimitiveDesc(name));\r\n      } else {\r\n        const definedProperty = _DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create(name);\r\n        if (!definedProperty.isPrimitive) {\r\n          descByProp.set(name, createDefaultDesc(component, definedProperty));\r\n        } else {\r\n          descByProp.set(name, createDefaultPrimitiveDesc(component, name));\r\n          if (!setOfPrivateProps.has(definedProperty.privateName)) {\r\n            Object.defineProperty(viewModel, definedProperty.privateName, createPrivateDesc(value));\r\n            setOfPrivateProps.add(definedProperty.privateName);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    \r\n    // ViewModelオブジェクトのプロパティを取得\r\n    for(const [prop, value] of Object.entries(viewModel)) {\r\n      // \r\n      if (setOfPrivateProps.has(prop) || setOfContextProps.has(prop)) continue;\r\n      if (value === Symbol.for(\"import\")) {\r\n        // importなのでdata-bindプロパティの展開処理\r\n        importProps.push(prop);\r\n        continue;\r\n      }\r\n      createDesc(prop, value);\r\n    }\r\n\r\n    // ViewModelのアクセサのthisをViewModelProxyにする\r\n    for(const [prop, desc] of Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(viewModel)))) {\r\n      if (prop === \"constructor\") continue;\r\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(desc.value)) continue;\r\n\r\n      if (!descByProp.has(prop)) {\r\n        createDesc(prop);\r\n      }\r\n      const curDesc = descByProp.get(prop);\r\n      if (desc.get) {\r\n        curDesc.get = () => applyGetter(component)(desc.get)();\r\n      }\r\n      if (desc.set) {\r\n        curDesc.set = v => applySetter(component)(desc.set)(v);\r\n      }\r\n    }\r\n\r\n    const removeProps = Object.keys(viewModel).filter(prop => !setOfPrivateProps.has(prop) && !setOfContextProps.has(prop));\r\n    removeProps.forEach(prop => delete viewModel[prop]);\r\n    Array.from(descByProp.entries()).forEach(([prop, desc]) => Object.defineProperty(viewModel, prop, desc));\r\n    const publicProps = Object.keys(viewModel).concat(importProps);\r\n    const definedProperties = publicProps.map(name => _DefinedProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create(name))\r\n      .sort((p1, p2) => p1.level === p2.level ? p1.paths.length - p2.paths.length : p1.level - p2.level);\r\n    // 配列と思われるプロパティの取得\r\n    const arrayProps = publicProps.filter(prop => `${prop}.*` in viewModel);\r\n    // 関係のあるプロパティ\r\n    const setOfRelativePropsByProp = new Map;\r\n    definedProperties\r\n      .reduce((map, prop) => {\r\n        map.set(prop.name, new Set(definedProperties.filter(_prop => _prop.setOfParentPath.has(prop.name)).map(prop => prop.name)));\r\n        return map;\r\n      }, setOfRelativePropsByProp);\r\n    return { importProps, arrayProps, setOfRelativePropsByProp, definedProperties };\r\n\r\n  }\r\n\r\n});\n\n//# sourceURL=webpack://re-data-x/./src/ViewModel/Builder.js?");

/***/ }),

/***/ "./src/ViewModel/DefinedProperty.js":
/*!******************************************!*\
  !*** ./src/ViewModel/DefinedProperty.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DefinedProperty)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n/**\r\n * 定義済みプロパティ\r\n * ViewModelのbuild時に登録してもらう\r\n */\r\nclass DefinedProperty {\r\n  name; // \"list\", \"list.*\"\r\n  paths = [];\r\n  level;\r\n  regexp;\r\n  /**\r\n   * コンストラクタ\r\n   * @param {string} name プロパティ名\r\n   */\r\n  constructor(name) {\r\n    // name = list.*.id\r\n    // paths = [list, *, id]\r\n    // last = id\r\n    // level = 1\r\n    // regexp = ^list\\.[w+]\\.id$\r\n    // parentPaths = [ list, * ]\r\n    // parentPath = list.*\r\n    // listParentPaths = [ [ list, * ], [ list ] ]\r\n    // parentPathsByPath = { \"list.*\" => [ list, * ], \"list\" => [ list ] }\r\n    // setOfParentPath = { \"list.*\" , \"list\"  }\r\n    // setOfExpandPath = { \"list.*\" }\r\n    // isPrimitive = false\r\n    // isParentPrimitive = false\r\n    // privateName = null\r\n    this.name = name;\r\n    this.paths = name.split(\".\");\r\n    this.last = this.paths[this.paths.length - 1] ?? null;\r\n    this.level = name.match(/\\*/g)?.length ?? 0;\r\n    this.regexp = (this.level > 0) ? new RegExp(\"^\" + name.replaceAll(\"*\", \"(\\\\w+)\").replaceAll(\".\", \"\\\\.\") + \"$\") : null;\r\n    this.closestListName = null;\r\n    this.listPaths = [ this.paths ];\r\n    for(let i = 1; i < this.paths.length; i++) {\r\n      this.listPaths.push(this.paths.slice(0, -i));\r\n    }\r\n    for(let i = 0; i < this.paths.length; i++) {\r\n      const paths = this.listPaths[i];\r\n      if (paths[paths.length - 1] === \"*\" && this.closestListName === null) {\r\n        this.closestListName = paths.slice(0, -1).join(\".\");\r\n      }\r\n    }\r\n\r\n    this.listParentPaths = [];\r\n    //this.listParentPaths.push(this.paths);\r\n    for(let i = 1; i < this.paths.length; i++) {\r\n      this.listParentPaths.push(this.paths.slice(0, -i));\r\n    }\r\n    this.parentPathsByPath = new Map();\r\n    this.setOfParentPath = new Set();\r\n    this.setOfExpandPath = new Set();\r\n    this.listParentPaths.forEach(paths => {\r\n      const path = paths.join(\".\");\r\n      this.setOfParentPath.add(path);\r\n      if (path.at(-1) === \"*\") {\r\n        const expandPath = path.slice(0, -2);\r\n        this.setOfExpandPath.add(expandPath);\r\n      }\r\n      this.parentPathsByPath.set(path, paths);\r\n    });\r\n    this.parentPaths = this.listParentPaths[0] ?? [];\r\n    this.parentPath = this.parentPaths.join(\".\");\r\n    this.isPrimitive = this.parentPaths.length === 0;\r\n    this.isParentPrimitive = this.parentPaths.length === 1;\r\n    this.privateName = this.isPrimitive ? \"__\" + name : null;\r\n    this.isExpandable = this.level > 0;\r\n    this.isObjective = !this.isExpandable && this.paths.length > 0;\r\n    this.isVariable = this.level > 0;\r\n    this.isGlobal = this.name.startsWith(\"$$\");\r\n    this.isContext = !this.isGlobal && this.name[0] === \"$\";\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {integer[]} indexes \r\n   */\r\n  getNameByIndexes(indexes) {\r\n    return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPath(this.name, indexes);\r\n  }\r\n\r\n  /**\r\n   * @param {DefinedProperty} comp\r\n   */\r\n  compare(comp) {\r\n    if (this === comp) return 0;\r\n    const diffLevel = this.level - comp.level;\r\n    if (diffLevel !== 0) return diffLevel;\r\n    const diffPaths = this.paths.length - comp.paths.length;\r\n    if (diffPaths !== 0) return diffPaths;\r\n    for(let i = 0; i < this.paths.length; i++) {\r\n      if (this.paths[i] === comp.paths[i]) continue;\r\n      return (this.paths[i] < comp.paths[i]) ? -1 : 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * @type {Map<string,DefinedProperty>}\r\n   */\r\n  static cacheDefinedPropertyByName = new Map;\r\n\r\n  /**\r\n   * ViewModelのBuild時、定義されたプロパティを登録\r\n   * @param {string} name プロパティ名\r\n   * @returns \r\n   */\r\n  static create(name) {\r\n    if (this.cacheDefinedPropertyByName.has(name)) {\r\n      return this.cacheDefinedPropertyByName.get(name);\r\n    } else {\r\n      const prop = new DefinedProperty(name);\r\n      this.cacheDefinedPropertyByName.set(name, prop);\r\n      return prop;\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://re-data-x/./src/ViewModel/DefinedProperty.js?");

/***/ }),

/***/ "./src/ViewModel/Proxy.js":
/*!********************************!*\
  !*** ./src/ViewModel/Proxy.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Thread/Thread.js */ \"./src/Thread/Thread.js\");\n/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Builder.js */ \"./src/ViewModel/Builder.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _CheckPoint_CheckPoint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CheckPoint/CheckPoint.js */ \"./src/CheckPoint/CheckPoint.js\");\n/* harmony import */ var _ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ActiveProperty.js */ \"./src/ViewModel/ActiveProperty.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @type {Symbol}\r\n */\r\nconst SymRaw = Symbol.for(\"raw\");\r\n/**\r\n * @type {Symbol}\r\n */\r\nconst SymIsProxy = Symbol.for(\"isProxy\");\r\n\r\nconst SET_OF_PROXY_METHODS = new Set([\r\n  \"$getValue\", \"$setValue\", \"$init\", \"$deleteCache\", \"$asyncProc\", \"$notify\",\r\n  \"$openDialog\", \"$closeDialog\", \"$cancelDialog\", \"$addImportProp\", \"$findNode\",\r\n]);\r\n\r\n/**\r\n * @type {Map<string,(handler:Handler)=>any>}\r\n */\r\nconst getMemberFuncOfProp = new Map();\r\ngetMemberFuncOfProp.set(\"$indexes\", handler => handler.component.stackIndexes.current);\r\ngetMemberFuncOfProp.set(\"$component\", handler => handler.component);\r\ngetMemberFuncOfProp.set(\"$setOfImportProps\", handler => handler.setOfImportProps);\r\ngetMemberFuncOfProp.set(\"$setOfArrayProps\", handler => handler.setOfArrayProps);\r\ngetMemberFuncOfProp.set(\"$setOfRelativePropsByProp\", handler => handler.setOfRelativePropsByProp);\r\ngetMemberFuncOfProp.set(\"$definedProperties\", handler => handler.definedProperties);\r\n\r\nconst SET_OF_PROXY_MEMBERS = new Set([\r\n  \"$1\", \"$2\", \"$3\", \"$4\", \"$5\", \"$6\", \"$7\", \"$8\", \r\n  \"$indexes\", \"$component\", \"$setOfImportProps\", \"$setOfArrayProps\", \"$setOfRelativePropsByProp\", \"$definedProperties\",\r\n  \r\n]);\r\n\r\n/**\r\n * キャッシュ\r\n */\r\nclass Cache extends Map {\r\n//  #cache = new Map;\r\n//  #setOfImportProps;\r\n  #debug = false;\r\n  /**\r\n   * @type {Component}\r\n   */\r\n  #component;\r\n\r\n  constructor(component) {\r\n    super();\r\n    this.#component = component;\r\n  }\r\n/*\r\n  has(key) {\r\n    const result = super.has(key);\r\n    this.#debug && !utils.isSymbol(key) && console.log(`cache.has(${key}) = ${result}, ${this.#component?.tagName}`);\r\n    return result;\r\n  }\r\n  get(key) {\r\n    const result = super.get(key);\r\n    this.#debug && !utils.isSymbol(key) && console.log(`cache.get(${key}) = ${result}, ${this.#component?.tagName}`);\r\n    return result;\r\n  }\r\n  delete(key) {\r\n    const result = super.delete(key);\r\n    this.#debug && !utils.isSymbol(key) && console.log(`cache.delete(${key}) = ${result}, ${this.#component?.tagName}`);\r\n    return result;\r\n  }\r\n*/\r\n\r\n  /**\r\n   * 要素の追加、更新\r\n   * @param {ActiveProperty} property \r\n   * @param {any} value \r\n   * @returns {Cache}\r\n   */\r\n  set(property, value) {\r\n    const activeProperties = this.#component.activeProperties;\r\n    if (activeProperties?.has(property.path)) {\r\n      value = value?.[SymIsProxy] ? value[SymRaw] : value;\r\n      super.set(property, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 関連する要素を削除\r\n   * \"キー.\"で始まるキーの要素が削除対象\r\n   * @param {ActiveProperty} property \r\n   */\r\n  deleteRelative(property) {\r\n    const activeProperties = this.#component.activeProperties;\r\n    this.has(property) && this.delete(property);\r\n    if (activeProperties?.has(property.path)) {\r\n      activeProperties.walkByParentPath(property.path, prop => this.delete(prop));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 配列プロキシ\r\n * 更新（追加・削除）があった場合、更新通知を送る機能を付加する\r\n */\r\nclass ArrayHandler {\r\n  /**\r\n   * @type {Component}\r\n   */\r\n  component;\r\n  /**\r\n   * @type {string}\r\n   */\r\n  prop;\r\n  /**\r\n   * ループインデックス\r\n   * @type {Array{iteger}}\r\n   */\r\n  indexes;\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Component} component \r\n   * @param {string} prop \r\n   */\r\n  constructor(component, prop) {\r\n    this.component = component;\r\n    this.prop = prop;\r\n    this.indexes = component.stackIndexes.current?.slice(0);\r\n  }\r\n\r\n  /**\r\n   * getter\r\n   * SymIsProxyはtrueを返す\r\n   * SymRawは元の配列を返す\r\n   * @param {Array} target Array\r\n   * @param {string} prop プロパティ\r\n   * @param {Proxy} receiver 配列プロキシ\r\n   * @returns \r\n   */\r\n  get(target, prop, receiver) {\r\n    if (prop === SymIsProxy) return true;\r\n    if (prop === SymRaw) return target;\r\n    return Reflect.get(target, prop, receiver);\r\n  }\r\n\r\n  /**\r\n   * setter\r\n   * lengthプロパティの場合、変更通知を送信する\r\n   * @param {Object} target Array\r\n   * @param {string} prop プロパティ\r\n   * @param {Any} value \r\n   * @param {Proxy} receiver 配列プロキシ\r\n   * @returns \r\n   */\r\n  set(target, prop, value, receiver) {\r\n    Reflect.set(target, prop, value, receiver);\r\n    if (prop === \"length\") {\r\n      _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].current.notify(this.component, this.prop, this.indexes ?? []);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * 配列プロキシを取得\r\n * 配列プロキシのプロキシといった重複をさけるため、\r\n * いったん元の配列を求めてからプロキシにする\r\n * @param {Component} component \r\n * @param {string} prop \r\n * @param {any} value \r\n * @returns \r\n */\r\nconst wrapArrayProxy = (component, prop, value) => {\r\n  value = value?.[SymIsProxy] ? value[SymRaw] : value;\r\n  return (value instanceof Array) ? new Proxy(value, new ArrayHandler(component, prop)) : value;\r\n}\r\n\r\n/**\r\n * ViewModelに以下の機能を付加する\r\n * ・プロパティ名とインデックスを指定しての値の読み書き\r\n * ・キャッシュ\r\n * ・ViewModel内からの非同期処理登録\r\n * ・ViewModel内からの更新通知\r\n * ・ViewModelの初期処理実行\r\n * ・コンテキスト変数（$indexes, $1～$8）\r\n */\r\nclass Handler {\r\n  /**\r\n   * @type {Component}\r\n   */\r\n  component;\r\n  /**\r\n   * @type {Cache}\r\n   */\r\n  cache;\r\n  importProps = [];\r\n  setOfImportProps = new Set;\r\n  arrayProps;\r\n  setOfArrayProps;\r\n  setOfRelativePropsByProp;\r\n  definedProperties;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Component} component \r\n   * @param {string[]} importProps\r\n   * @param {string[]} arrayProps\r\n   * @param {Map<string,Set<string>>} setOfRelativePropsByProp\r\n   */\r\n  constructor(component, importProps, arrayProps, setOfRelativePropsByProp, definedProperties) {\r\n    this.component = component;\r\n    this.#addImportProp(...importProps);\r\n    this.cache = new Cache(component);\r\n    this.arrayProps = arrayProps;\r\n    this.setOfArrayProps = new Set(arrayProps);\r\n    this.setOfRelativePropsByProp = setOfRelativePropsByProp;\r\n    this.definedProperties = definedProperties;\r\n  }\r\n\r\n  #addImportProp(...args) {\r\n    this.importProps.push(...args);\r\n    args.forEach(prop => this.setOfImportProps.add(prop));\r\n  }\r\n  $addImportProp(...args) {\r\n    const receiver = args.pop();\r\n    const target = args.pop();\r\n    Reflect.apply(this.#addImportProp, this, args);\r\n  }\r\n\r\n  /**\r\n   * プロパティ、インデックス配列を指定してプロパティ値を取得\r\n   * @param {ActiveProperty} property\r\n   * @param {Object} target ViewModel\r\n   * @param {Proxy} receiver ViewModelProxy\r\n   * @returns \r\n   */\r\n  $getValue(property, target, receiver) {\r\n    const cache = this.cache;\r\n    const component = this.component;\r\n    let result;\r\n    if (cache.has(property)) {\r\n      result = wrapArrayProxy(component, property.name, cache.get(property));\r\n    } else {\r\n      result = component.stackIndexes.push(property.indexes, function () { \r\n        const value = Reflect.get(target, property.name, receiver);\r\n        cache.set(property, value);\r\n        const result = wrapArrayProxy(component, property.name, value);\r\n        return result;\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * プロパティ、インデックス配列を指定してプロパティに値を設定\r\n   * 設定後、更新通知を投げる\r\n   * @param {ActiveProperty} property\r\n   * @param {Any} value \r\n   * @param {Object} target ViewModel\r\n   * @param {Proxy} receiver ViewModelProxy\r\n   */\r\n  $setValue(property, value, target, receiver) {\r\n    const cache = this.cache;\r\n    const component = this.component;\r\n    const notify = this.$notify;\r\n    const handler = this;\r\n    component.stackIndexes.push(property.indexes, function () {\r\n      Reflect.set(target, property.name, value, receiver);\r\n      cache.deleteRelative(property);\r\n      Reflect.apply(notify, handler, [property.name, property.indexes ?? []]);\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 非同期処理を登録\r\n   * ViewModelから呼ばれることを想定\r\n   * @param  {...any} args [proc, params?, receiver, target]\r\n   */\r\n  $asyncProc(...args) {\r\n    const receiver = args.pop();\r\n    const target = args.pop();\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].current.asyncProc(args[0], receiver, args[1] ?? []);\r\n  }\r\n\r\n  /**\r\n   * 更新を通知する\r\n   * __で始まるプロパティは対象外\r\n   * $$で始まるプロパティは対象外\r\n   * インポートしたプロパティは対象外\r\n   * ViewModelから呼ばれることを想定\r\n   * @param {string} prop \r\n   * @param {Array<integer>} indexes \r\n   * @returns \r\n   */\r\n  $notify(prop, indexes) {\r\n    if (prop.startsWith(\"__\")) return;\r\n    if (prop.startsWith(\"$\")) return;\r\n    if (this.setOfImportProps.has(prop)) return;\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].current.notify(this.component, prop, indexes ?? []);\r\n  }\r\n\r\n  /**\r\n   * ViewModelに設定した初期化処理（$onInit）を実行\r\n   * @param {Object} target ViewModel\r\n   * @param {Proxy} receiver ViewModelProxy\r\n   */\r\n  async $init(target, receiver) {\r\n    if (\"$relativeProps\" in target) {\r\n      const relativeProps = Reflect.get(target, \"$relativeProps\", receiver);\r\n      relativeProps.forEach(([prop, refProps]) => {\r\n        refProps.forEach(refProp => {\r\n          const setOfRelativeProps = this.setOfRelativePropsByProp.get(refProp).add(prop) ?? new Set([prop]);\r\n          this.setOfRelativePropsByProp.set(refProp, setOfRelativeProps);\r\n        })\r\n      });\r\n    }\r\n\r\n    (\"$onInit\" in target) && await Reflect.apply(target.$onInit, receiver,[]);\r\n  }\r\n\r\n  /**\r\n   * 指定されたパスのキャッシュをクリア\r\n   * @param {Set<string>} setOfPath 指定されたパスのセット\r\n   */\r\n  $deleteCache(setOfPath) {\r\n    const cache = this.cache;\r\n    for(const path of Array.from(setOfPath)) {\r\n      const prop = _ActiveProperty_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getByPath(path);\r\n      prop && cache.deleteRelative(prop);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ダイアログ表示\r\n   * 現行のスレッドは、ダイアログ終了まで待機するので、ダイアログ用に別スレッドを作成する（Thread.suspend）\r\n   * ViewModelから呼ばれることを想定\r\n   * @param {string} name ダイアログ名（プレフィックス抜き）\r\n   * @param {Object} binds バインド情報\r\n   * @return {Any?} 正常終了の場合、クローズ時のパラメータ、キャンセルの場合、undefined\r\n   */\r\n  async $openDialog(...args) {\r\n    const receiver = args.pop();\r\n    const target = args.pop();\r\n    const [name, params = {}] = args;\r\n    const parentComponent = this.component;\r\n    _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].suspend(parentComponent); // 別スレッド作成\r\n    const tagName = _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].tagName(name);\r\n    const template = document.createElement(\"template\");\r\n    template.innerHTML = `<${tagName} data-dialog></${tagName}>`\r\n    const clone = document.importNode(template.content, true);\r\n    const dialogComponent = clone.querySelector(tagName);\r\n    try {\r\n      // ダイアログが処理終了で終わった場合、resolve\r\n      // ダイアログがキャンセル終了で終わった場合、reject\r\n      return await new Promise(async (resolve, reject) => {\r\n        // コンポーネントにダイアログ情報セット\r\n        dialogComponent.setDialogInfo(parentComponent, resolve, reject, params);\r\n        document.body.appendChild(clone);\r\n        await dialogComponent.initializePromise;\r\n      });\r\n    } catch(e) {\r\n    } finally {\r\n      document.body.removeChild(dialogComponent);\r\n      _Thread_Thread_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].resume(); // スレッド復帰\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ダイアログ処理終了\r\n   * @param {Object} data \r\n   */\r\n  $closeDialog(data) {\r\n    this.component.closeDialog(data);\r\n  }\r\n\r\n  /**\r\n   * ダイアログキャンセル終了\r\n   */\r\n  $cancelDialog() {\r\n    this.component.cancelDialog();\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Set<string>} setOfNames \r\n   * @param {(key:string,node:Node)=>{}} callback \r\n   */\r\n  $findNode(setOfNames, callback) {\r\n    this.component.binder.findNode(setOfNames, callback);\r\n  }setOfNames\r\n\r\n  /**\r\n   * getter\r\n   * @param {Object} target ViewModel\r\n   * @param {string} prop プロパティ名\r\n   * @param {Proxy} receiver VirewModelProxy\r\n   * @returns \r\n   */\r\n  get(target, prop, receiver) {\r\n    if (this.component.activeProperties?.has(prop)) {\r\n      const activeProperty = this.component.activeProperties.get(prop);\r\n      return this.$getValue(activeProperty, target, receiver);\r\n    }\r\n    if (prop in target) {\r\n      const value = Reflect.get(target, prop, receiver);\r\n      const result = wrapArrayProxy(this.component, prop, value);\r\n      return result;\r\n    }\r\n\r\n    if (prop[0] === \"$\") {\r\n      if (SET_OF_PROXY_METHODS.has(prop)) {\r\n        return (...args) => Reflect.apply(this[prop], this, [...args, target, receiver]);\r\n      }\r\n      if (SET_OF_PROXY_MEMBERS.has(prop)) {\r\n        const getMemberFunc = getMemberFuncOfProp.get(prop);\r\n        if (getMemberFunc) return getMemberFunc(this);\r\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isSymbol(prop)) {\r\n          return Reflect.get(this, prop);\r\n        }\r\n        return this.component.stackIndexes.current[parseInt(prop.slice(1)) - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * setter\r\n   * 値をプロパティにセットする\r\n   * 対応するプロパティのキャッシュを削除\r\n   * 更新通知を送る\r\n   * @param {Object} target ViewModel\r\n   * @param {string} prop プロパティ名\r\n   * @param {any} value 値\r\n   * @param {Proxy} receiver VirewModelProxy\r\n   * @returns \r\n   */\r\n  set(target, prop, value, receiver) {\r\n    if (this.component.activeProperties.has(prop)) {\r\n      const activeProperty = this.component.activeProperties.get(prop);\r\n      this.$setValue(activeProperty, value, target, receiver);\r\n      return true;\r\n    }\r\n\r\n    Reflect.set(target, prop, value, receiver);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * プロパティの存在確認\r\n   * @param {Object} target ViewModel\r\n   * @param {string} prop プロパティ名\r\n   * @param {Proxy} receiver VirewModelProxy\r\n   * @returns \r\n   */\r\n  has(target, prop, receiver) {\r\n    if (prop[0] === \"$\") {\r\n      if (SET_OF_PROXY_METHODS.has(prop)) return true;\r\n      if (SET_OF_PROXY_MEMBERS.has(prop)) return true;\r\n    }\r\n    if (prop in target) return true;\r\n    return Reflect.has(target, prop, receiver);\r\n  }\r\n}\r\n\r\nconst ViewModelProxy = Proxy;\r\n\r\n/**\r\n * ViewModelProxyの生成\r\n */\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n  /**\r\n   * ViewModelProxyの生成\r\n   * @param {Component} component \r\n   * @param {Object} viewModel \r\n   * @returns {ViewModelProxy}\r\n   */\r\n  static create(component, viewModel = component.viewModel) {\r\n    const { importProps, arrayProps, setOfRelativePropsByProp, definedProperties} = _Builder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].build(component);\r\n    return new ViewModelProxy(viewModel, new Handler(component, importProps, arrayProps, setOfRelativePropsByProp, definedProperties));\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack://re-data-x/./src/ViewModel/Proxy.js?");

/***/ }),

/***/ "./src/View/DialogView.js":
/*!********************************!*\
  !*** ./src/View/DialogView.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DialogView)\n/* harmony export */ });\n/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View.js */ \"./src/View/View.js\");\n\r\n\r\nclass DialogView extends _View_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * 背景とフレームのCSS\r\n   */\r\n  get css() {\r\n    return `\r\n.bg {\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  left: 0;\r\n  top: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: fixed;\r\n  position: fixed;\r\n  position: 499;\r\n}\r\n.fg {\r\n  background-color: white;\r\n  border-radius: .375rem;\r\n  padding: 3rem;\r\n}\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * パースしバインド情報を生成、初期化（子要素へ値を反映）\r\n   * templateのクローンは、importNodeで行う\r\n   * ダイアログ用の背景とフレームを生成する\r\n   * イベントハンドラを設定\r\n   * @param {Component?} component \r\n   * @param {Binder?} binder \r\n   * @param {HTMLTemplateElement?} template \r\n   * @param {ShadowRoot?} rootElement \r\n   */\r\n  render(component = this.component, binder = component.binder, template = component.template, rootElement = component.shadowRoot ?? component) {\r\n    const clone = document.importNode(template.content, true); // See http://var.blog.jp/archives/76177033.html\r\n    binder.bind(clone);\r\n//    binder.init();\r\n\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = this.css;\r\n    rootElement.appendChild(style);\r\n    const bg = document.createElement(\"div\");\r\n    bg.classList.add(\"bg\");\r\n    const fg = document.createElement(\"div\");\r\n    fg.classList.add(\"fg\");\r\n    bg.appendChild(fg);\r\n    fg.appendChild(clone);\r\n    rootElement.appendChild(bg);\r\n\r\n    // 背景クリック時、ダイアログ消去\r\n    bg.addEventListener(\"click\", () => component.cancelDialog());\r\n    // フレームクリック時、イベント伝播中止（背景までイベントが伝播しないように）\r\n    fg.addEventListener(\"click\", e => e.stopPropagation());\r\n  }\r\n    \r\n}\n\n//# sourceURL=webpack://re-data-x/./src/View/DialogView.js?");

/***/ }),

/***/ "./src/View/View.js":
/*!**************************!*\
  !*** ./src/View/View.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ View)\n/* harmony export */ });\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _BoundNode_Binder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../BoundNode/Binder.js */ \"./src/BoundNode/Binder.js\");\n\r\n\r\n\r\nclass View {\r\n  /**\r\n   * @type {Component}\r\n   */\r\n  component;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Component} component \r\n   */\r\n  constructor(component) {\r\n    this.component = component;\r\n  }\r\n\r\n  /**\r\n   * レンダリング\r\n   * パースしバインド情報を生成、初期化（子要素へ値を反映）\r\n   * templateのクローンは、importNodeで行う\r\n   * @param {Component?} component \r\n   * @param {Binder?} binder \r\n   * @param {HTMLTemplateElement?} template \r\n   * @param {ShadowRoot?} rootElement \r\n   */\r\n  render(component = this.component, binder = component.binder, template = component.template, rootElement = component.shadowRoot ?? component) {\r\n    const clone = document.importNode(template.content, true); // See http://var.blog.jp/archives/76177033.html\r\n    binder.bind(clone);\r\n    //binder.init();\r\n    rootElement.appendChild(clone);\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/View/View.js?");

/***/ }),

/***/ "./src/framework.js":
/*!**************************!*\
  !*** ./src/framework.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Framework)\n/* harmony export */ });\n/* harmony import */ var _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component/WebComponent.js */ \"./src/Component/WebComponent.js\");\n/* harmony import */ var _Component_ComponentData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Component/ComponentData.js */ \"./src/Component/ComponentData.js\");\n/* harmony import */ var _Globals_Globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Globals/Globals.js */ \"./src/Globals/Globals.js\");\n\r\n\r\n\r\n\r\nclass Framework {\r\n  /**\r\n   * タグプレフィックスを設定する\r\n   * @static\r\n   * @param {string} prefix \r\n   * @returns {Framework}\r\n   */\r\n  static prefix = prefix => {\r\n    _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prefix = prefix;\r\n    return this;\r\n  }\r\n  /**\r\n   * @typedef {{css:string,html:string,ViewModel:class}} ComponentInputData\r\n   */\r\n  /**\r\n   * コンポーネントデータを登録\r\n   * @static\r\n   * @param {Object<string,ComponentInputData>} components \r\n   * @returns {Framework}\r\n   */\r\n  static components = components => {\r\n    for(const [name, data] of Object.entries(components)) {\r\n      const componentData = _Component_ComponentData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(data);\r\n      _Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registComponentData(_Component_WebComponent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tagName(name), componentData);\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * グローバル変数の登録\r\n   * @param {{key:any}} params \r\n   * @returns {Framework}\r\n   */\r\n  static globals = params => {\r\n    Object.assign(_Globals_Globals_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], params);\r\n    return this;\r\n  }\r\n}\n\n//# sourceURL=webpack://re-data-x/./src/framework.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _framework_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./framework.js */ \"./src/framework.js\");\n\r\n\r\nwindow.redatax = _framework_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_framework_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n\n\n//# sourceURL=webpack://re-data-x/./src/index.js?");

/***/ }),

/***/ "./src/types.js":
/*!**********************!*\
  !*** ./src/types.js ***!
  \**********************/
/***/ (() => {

eval("/**\r\n * @typedef {Object<string,any>} ViewModel\r\n */\r\n/**\r\n * @typedef {Proxy<ViewModel>} ViewModelProxy\r\n */\r\n/**\r\n * @typedef {(node:Node, nodeProp:NodeProperty, viewModel:ViewModelProxy, viewModelProp:ActiveProperty, filters:FilterData[])=>{}} UpdateViewModelFunc\r\n */\r\n/**\r\n * @typedef {(viewModel:ViewModelProxy, viewModelProp:ActiveProperty, node:Node, nodeProp:NodeProperty, filters:FilterData[])=>{}} UpdateNodeFunc\r\n */\r\n/**\r\n * @typedef {{viewModelProperty:ActiveProperty,filters:FilterData[]}} ViewModelPropertyInfo\r\n */\r\n\r\n\n\n//# sourceURL=webpack://re-data-x/./src/types.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n  /**\r\n   * \r\n   * pattern：\"list.*.items.*.name\"\r\n   * indexes：[5,13]\r\n   * returns：\"list.5.items.13.name\"\r\n   * @param {string} pattern \r\n   * @param {Array<integer>} indexes \r\n   * @returns \r\n   */\r\n  static getPath(pattern, indexes) {\r\n//    const stack = indexes.slice();\r\n//    return pattern.replaceAll(\"*\", () => stack.shift() ?? \"\");\r\n    let i = 0;\r\n    return pattern.replaceAll(\"*\", () => indexes[i++] ?? \"*\");\r\n  }\r\n\r\n  /**\r\n   * 例外を投げる\r\n   * @param {string} message \r\n   */\r\n  static raise(message) {\r\n    throw message;\r\n  }\r\n\r\n  /**\r\n   * 関数かどうかをチェック\r\n   * @param {any} obj \r\n   * @returns {boolean}\r\n   */\r\n  static isFunction = (obj) => {\r\n    const toString = Object.prototype.toString;\r\n    const text = toString.call(obj).slice(8, -1).toLowerCase();\r\n    return (text === \"function\" || text === \"asyncfunction\");\r\n  }\r\n  /**\r\n   * シンボルかどうかをチェック\r\n   * @param {any} obj \r\n   * @returns {boolean}\r\n   */\r\n  static isSymbol = (obj) => typeof obj === \"symbol\";\r\n\r\n  /**\r\n   * \r\n   * @param {Node} node \r\n   * @returns {HTMLElement}\r\n   */\r\n  static toElement = node => (node instanceof HTMLElement) ? node : this.raise(`node ${node} is not HTMLElement`);\r\n  \r\n  /**\r\n   * \r\n   * @param {Node} node \r\n   * @returns {HTMLTemplateElement}\r\n   */\r\n  static toTemplate = node => (node instanceof HTMLTemplateElement) ? node : this.raise(`node ${node} is not HTMLTemplateElement`);\r\n  \r\n  /**\r\n   * \r\n   * @param {Node} node \r\n   * @returns {HTMLInputElement}\r\n   */\r\n  static toInput = node => (node instanceof HTMLInputElement) ? node : this.raise(`node ${node} is not HTMLInputElement`);\r\n  \r\n  static toKebabCase = text => text.replaceAll(/([A-Z])/g, (match,char,index) => (index > 0 ? \"-\" : \"\") + char.toLowerCase());\r\n});\n\n//# sourceURL=webpack://re-data-x/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;